[
    {
        "id": "82530ef4.8a0f6",
        "type": "tab",
        "label": "STM32WL Demo Tool",
        "disabled": false,
        "info": "This flow is used to monitor values of STM32WL sensors.\n\nClick on the help node to see information."
    },
    {
        "id": "41545e6d.1fcf9",
        "type": "tab",
        "label": "Serial port configuration",
        "disabled": false,
        "info": "This tabs manage the Serial port\n\nTo configure the serial port, see details in the  node : \"Select the Serial Port in this node\""
    },
    {
        "id": "b56598ed.0fee28",
        "type": "tab",
        "label": "Demo main flow",
        "disabled": false,
        "info": "This is the main flow of the STM32WL demo \n\nThis tab includes :\n\n- The initialization nodes to select country and start demo\n- The Finite state Machine (FSM) is used to manage the demo state based on user and board actions.\n- The data formatting : data received from concentrator are decoded, sent to charts and stored in the table.\n- The table data management : store the data and manage the display (refresh, addition of new sensor)\n"
    },
    {
        "id": "88971af9.c4b578",
        "type": "tab",
        "label": "Sensor panels",
        "disabled": false,
        "info": "This tabs holds all the sensor panels\n\nFor each panel, there is a subflow node used to filter/split the data and the UI elements.\n\nThe subflow outputs 6 parameters  :\n - Sensor EUI\n - Temperature\n - PER\n - Voltage\n - RSSI\n - Number of missed packet\n\n \nBy default, Voltage, Missed packet and Temperature are plotted, but user can freely add or changes chart as required.\n\n"
    },
    {
        "id": "fce58382.31591",
        "type": "tab",
        "label": "AT Command",
        "disabled": false,
        "info": "This Tab includes :\n- AT command parsing, management of timeout and errors.\n- Serial port log window"
    },
    {
        "id": "7a58962e.d73f18",
        "type": "tab",
        "label": "Modulation",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6074a628.24f198",
        "type": "subflow",
        "name": "scan",
        "info": "",
        "category": "ui-table",
        "in": [
            {
                "x": 51,
                "y": 85,
                "wires": [
                    {
                        "id": "1ff1e339.f9499d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 357,
                "y": 85,
                "wires": [
                    {
                        "id": "1ff1e339.f9499d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ipString",
                "type": "str",
                "value": "http://192.168.2.",
                "ui": {
                    "icon": "font-awesome/fa-feed",
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    },
                    "label": {}
                }
            },
            {
                "name": "start",
                "type": "num",
                "value": "1",
                "ui": {
                    "icon": "font-awesome/fa-arrow-circle-right",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num"
                        ]
                    },
                    "label": {}
                }
            },
            {
                "name": "end",
                "type": "num",
                "value": "255",
                "ui": {
                    "icon": "font-awesome/fa-arrow-circle-left",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num"
                        ]
                    },
                    "label": {}
                }
            },
            {
                "name": "suffix",
                "type": "str",
                "value": "/json",
                "ui": {
                    "icon": "font-awesome/fa-address-card-o",
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    },
                    "label": {}
                }
            }
        ],
        "color": "#A6BBCF",
        "icon": "font-awesome/fa-stethoscope"
    },
    {
        "id": "a4435987.cef7d8",
        "type": "subflow",
        "name": "ui-table handler",
        "info": "# ui-table handler\nUniversal handler for ui-table.\n## features\n- buffer table data\n- add or update individual rows or cells of the table\n- delete rows\n- clear tableData\n- handle column width\n- handle column order\n\n## configuration\n- `tabulator` json formatted object containing configuration of the table. See ui-table for more details.\n- `property` property of the msg object that contains the data to be passed to ui-table. I.e. *state* `msg.state`\n- `index` index column to identify individual rows. Each message containing data must have a unique `msg.topic` to identify the row. Messages without this `msg.topic` will be droped. It is not nessesary but possible to display the index column in the table. Do not enable editing on this column otherwise you will loose the connection and another row will be added to the table as soon as a new message arrives!\n\n   Defaults to *$topic* `msg.state.$topic`\n- `dashboard` name of the dashboard tab to only update the table if the dashboard is visible. If empty the table will be updated on every tab change and connect.\n- `context` configuration of context data. The subflow will save or cache data in the flows context using `$parent.`. \n   **tableData** caches the incoming data to restore it on `ui-controlÂ´ *change* messages.\n   **tableConfig** saves column width and order to save the interactive table layot\n   **tableEdit** saves edits on the table data otherwise it would be overwritten when new data arrives\n```json\n{\n    \"tableData\": {\n        \"name\": \"tableData\"\n    },\n    \"tableConfig\": {\n        \"name\": \"tableConfig\",\n        \"storage\": \"file\"\n    },\n    \"tableEdit\": {\n        \"name\": \"tableEdit\",\n        \"storage\": \"file\"\n    }\n}\n```\n\n## commands\ncommands can be passed by sending a object as `msg.payload`\n- delete custom colum order and restore colum order from the tabulator json. This is important if you add or delete columns in the tabulator config otherwise the columns most likely don`t show up\n```json\n{\n    \"command\": \"delete\",\n    \"object\": \"columnOrder\"\n}\n```\n- delete custom column widths\n```json\n{\n    \"command\": \"delete\",\n    \"object\": \"columnWidth\"\n}\n```\n- delete tableCache\n```json\n{\n    \"command\": \"delete\",\n    \"object\": \"tableCache\"\n}\n```\n\n## background\nui-table warps the powerfull tabluator library. This subflow makes it easier to unleash the powerfull features of ui-table",
        "category": "dashboard",
        "in": [
            {
                "x": 54,
                "y": 85,
                "wires": [
                    {
                        "id": "73ad843.7ad667c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 85,
                "wires": [
                    {
                        "id": "73ad843.7ad667c",
                        "port": 1
                    }
                ]
            },
            {
                "x": 360,
                "y": 136,
                "wires": [
                    {
                        "id": "73ad843.7ad667c",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "tabulator",
                "type": "json",
                "value": "{\"tabulator\":{\"responsiveLayout\":\"collapse\",\"responsiveLayoutCollapseStartOpen\":false,\"index\":\"$name\",\"layout\":\"fitColumns\",\"movableColumns\":true,\"groupBy\":\"\",\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columnMoved\":\"function(column, columns){     var newColumns=[];     columns.forEach(function (column) {         newColumns.push({'field': column._column.definition.field, 'title': column._column.definition.title});     });     this.send({topic:this.config.topic,ui_control:{callback:'columnMoved',columns:newColumns}}); }\",\"rowFormatter\":\"function(row){     var data = row.getData();     switch (data.$state) {         case \\\"lost\\\":             row.getElement().style.backgroundColor = \\\"#9e2e66\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"sleeping\\\":             row.getElement().style.backgroundColor = \\\"#336699\\\";             break;         case \\\"disconnected\\\":             row.getElement().style.backgroundColor = \\\"#cc3300\\\";             row.getElement().style.color = \\\"#a6a6a6\\\";             break;         case \\\"alert\\\":             row.getElement().style.backgroundColor = \\\"#A6A6DF\\\";             break;         case \\\"init\\\":             row.getElement().style.backgroundColor = \\\"#f2f20d\\\";             break;         case \\\"ready\\\":             row.getElement().style.backgroundColor = \\\"\\\";             row.getElement().style.color = \\\"\\\";             break;         } }\",\"columns\":[{\"formatter\":\"responsiveCollapse\",\"width\":30,\"minWidth\":30,\"align\":\"center\",\"resizable\":false,\"headerSort\":false,\"frozen\":true,\"title\":\"expand\",\"field\":\"expand\",\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {      var html = cell.getValue(); return html;  }\",\"title\":\"State\",\"field\":\"$stateIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"formatter\":\"function(cell, formatterParams, onRendered) {     var html = cell.getValue(); return html;  }\",\"title\":\"Signal\",\"field\":\"signalIcon\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"Name\",\"field\":\"$name\",\"width\":100,\"frozen\":true,\"headerVertical\":\"flip\"},{\"title\":\"State\",\"field\":\"$state\",\"width\":100,\"align\":\"center\",\"headerVertical\":\"flip\"},{\"title\":\"last-ready\",\"field\":\"lastSeenreadyFormatted\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Homie\",\"field\":\"$homie\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Platform\",\"field\":\"$implementation\",\"width\":100,\"align\":\"left\",\"headerVertical\":\"flip\"},{\"title\":\"Statistics\",\"columns\":[{\"title\":\"Interval\",\"field\":\"interval\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"outputFormat\":\"d hh:mm:ss\",\"inputFormat\":\"seconds\",\"invalidPlaceholder\":\"(unknown)\"},\"title\":\"Uptime\",\"field\":\"uptime\",\"formatter\":\"function(cell, formatterParams, onRendered){     var pad = function (num) {         return (\\\"0\\\"+num).slice(-2);     };     var secs = Number(cell.getValue());     if (Number.isNaN(secs)) return;     var minutes = Math.floor(secs / 60);     secs = secs%60;     var hours = Math.floor(minutes/60);     minutes = minutes%60;     var days = Math.floor(hours/24);     hours = hours%24;     if (days>0)         return days+\\\"d \\\"+pad(hours)+\\\":\\\"+pad(minutes);     else         return pad(hours)+\\\":\\\"+pad(minutes)+\\\":\\\"+pad(secs); }\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\"; else return; }\",\"legendColor\":\"#FFFFFF\",\"legendAlign\":\"center\"},\"title\":\"Signal\",\"field\":\"signal\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":2.5,\"max\":3.5,\"color\":[\"red\",\"green\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" V</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Supply\",\"field\":\"supply\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Battery\",\"field\":\"battery\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":0,\"max\":100000,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+(value/1024).toFixed(2)+\\\" kB</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"Memory\",\"field\":\"freeheap\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"target\":\"_blank\",\"min\":0,\"max\":100,\"color\":[\"red\",\"orange\",\"green\"],\"legend\":\"function (value) {     if (value>0)         return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" %</span>\\\";     else         return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU load\",\"field\":\"cpuload\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"},{\"formatterParams\":{\"min\":20,\"max\":60,\"color\":[\"green\",\"orange\",\"red\"],\"legend\":\"function (value) { if (value>0) return \\\"<span style='color:#FFFFFF;'>\\\"+value+\\\" Â°C</span>\\\"; else return; }\",\"legendColor\":\"#101010\",\"legendAlign\":\"center\"},\"title\":\"CPU temp\",\"field\":\"cputemp\",\"formatter\":\"progress\",\"width\":100,\"headerVertical\":\"flip\"}]},{\"title\":\"Firmware\",\"columns\":[{\"formatter\":\"link\",\"formatterParams\":{\"labelField\":\"$localip\",\"urlPrefix\":\"http://\",\"target\":\"_blank\"},\"title\":\"IP\",\"field\":\"$localip\",\"width\":100},{\"title\":\"mac\",\"field\":\"$mac\",\"width\":100},{\"title\":\"Accsess Point\",\"field\":\"SSID\",\"width\":100},{\"title\":\"Firmware\",\"field\":\"name\",\"width\":100},{\"title\":\"Version\",\"field\":\"version\",\"width\":100},{\"title\":\"Last Boot Cause\",\"field\":\"lastBootCause\",\"width\":100},{\"title\":\"Reset Reason\",\"field\":\"resetReason\",\"width\":100}]}]},\"customHeight\":12}",
                "ui": {
                    "icon": "font-awesome/fa-table",
                    "label": {
                        "en-US": "Tabulator"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableDataProp",
                "type": "str",
                "value": "row",
                "ui": {
                    "icon": "font-awesome/fa-tag",
                    "label": {
                        "en-US": "rowProperty"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num",
                            "bool",
                            "json",
                            "bin",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableIndex",
                "type": "str",
                "value": "$topic",
                "ui": {
                    "icon": "font-awesome/fa-indent",
                    "label": {
                        "en-US": "Index"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "dashboard",
                "type": "str",
                "value": "Remote Device Table",
                "ui": {
                    "icon": "font-awesome/fa-dashboard",
                    "label": {
                        "en-US": "Dashboard"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "tableContext",
                "type": "json",
                "value": "{\"tableData\":{\"name\":\"tableData\"},\"tableConfig\":{\"name\":\"tableConfig\",\"storage\":\"file\"},\"tableEdit\":{\"name\":\"tableEdit\",\"storage\":\"file\"}}",
                "ui": {
                    "icon": "font-awesome/fa-database",
                    "label": {
                        "en-US": "Context"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "json",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "group",
                "type": "str",
                "value": ""
            }
        ],
        "color": "#3FADB5",
        "icon": "node-red-dashboard/ui_slider.png",
        "status": {
            "x": 360,
            "y": 34,
            "wires": [
                {
                    "id": "73ad843.7ad667c",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "d3f1f54f.32ba68",
        "type": "subflow",
        "name": "Split sensor data",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 140,
                "wires": [
                    {
                        "id": "78e4fd7b.a9a684"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 873,
                "y": 80,
                "wires": [
                    {
                        "id": "5c6f9467.8ab03c",
                        "port": 0
                    }
                ]
            },
            {
                "x": 873,
                "y": 120,
                "wires": [
                    {
                        "id": "ddd9017c.d977b",
                        "port": 0
                    }
                ]
            },
            {
                "x": 873,
                "y": 160,
                "wires": [
                    {
                        "id": "a6ba8fe6.2e694",
                        "port": 0
                    }
                ]
            },
            {
                "x": 873,
                "y": 200,
                "wires": [
                    {
                        "id": "2301c971.f840c6",
                        "port": 0
                    }
                ]
            },
            {
                "x": 880,
                "y": 240,
                "wires": [
                    {
                        "id": "de087139.6d50d",
                        "port": 0
                    }
                ]
            },
            {
                "x": 880,
                "y": 280,
                "wires": [
                    {
                        "id": "ec48745b.0496c8",
                        "port": 0
                    }
                ]
            },
            {
                "x": 880,
                "y": 322,
                "wires": [
                    {
                        "id": "5553ba2bab33484c",
                        "port": 0
                    }
                ]
            },
            {
                "x": 879,
                "y": 363,
                "wires": [
                    {
                        "id": "429462e7e8b4bfc4",
                        "port": 0
                    }
                ]
            },
            {
                "x": 878,
                "y": 404,
                "wires": [
                    {
                        "id": "42b51ac05ca67e83",
                        "port": 0
                    }
                ]
            },
            {
                "x": 878,
                "y": 444,
                "wires": [
                    {
                        "id": "03f235c5afae724e",
                        "port": 0
                    }
                ]
            },
            {
                "x": 877,
                "y": 481,
                "wires": [
                    {
                        "id": "b3cde9dd7271d7d6",
                        "port": 0
                    }
                ]
            },
            {
                "x": 878,
                "y": 518,
                "wires": [
                    {
                        "id": "dca03c4d29550420",
                        "port": 0
                    }
                ]
            },
            {
                "x": 878,
                "y": 558,
                "wires": [
                    {
                        "id": "8ab22b2b6c842050",
                        "port": 0
                    }
                ]
            },
            {
                "x": 877,
                "y": 600,
                "wires": [
                    {
                        "id": "31855424eb0b781a",
                        "port": 0
                    }
                ]
            },
            {
                "x": 873,
                "y": 655,
                "wires": [
                    {
                        "id": "b01b6d2b9d0dc03f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "sensor",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-feed",
                    "type": "input",
                    "opts": {
                        "types": [
                            "num"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#3CB4E6",
        "outputLabels": [
            "Eui",
            "Temperature",
            "PER",
            "Voltage",
            "RSSI",
            "Missed packet",
            "Pressure",
            "Orientation",
            "activity",
            "distance",
            "step_count",
            "swipe count",
            "acceleration avg",
            "acceleration max",
            "humidity"
        ],
        "icon": "node-red/switch.svg"
    },
    {
        "id": "d8491e4b.9e987",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "STM32WL Demo",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "allowTempTheme": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "d5129a11.c2b478",
        "type": "ui_tab",
        "name": "STM32WL Demo",
        "icon": "network_wifi",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b2debca7.ea722",
        "type": "ui_group",
        "name": "Sensor List",
        "tab": "d5129a11.c2b478",
        "order": 2,
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "18848a5.a3bdb76",
        "type": "ui_group",
        "name": "Sensor 0",
        "tab": "d5129a11.c2b478",
        "order": 6,
        "disp": true,
        "width": 8,
        "collapse": true
    },
    {
        "id": "36f009b.e058af6",
        "type": "ui_group",
        "name": "Sensor 1",
        "tab": "d5129a11.c2b478",
        "order": 7,
        "disp": true,
        "width": 8,
        "collapse": true
    },
    {
        "id": "5cf86100.5fd8",
        "type": "ui_group",
        "name": "Sensor 2",
        "tab": "d5129a11.c2b478",
        "order": 8,
        "disp": true,
        "width": 8,
        "collapse": true
    },
    {
        "id": "9142e5f0.a71698",
        "type": "ui_group",
        "name": "Sensor 3",
        "tab": "d5129a11.c2b478",
        "order": 9,
        "disp": true,
        "width": "8",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2b4a56e8.103f4a",
        "type": "ui_group",
        "name": "Start",
        "tab": "d5129a11.c2b478",
        "order": 1,
        "disp": false,
        "width": 16,
        "collapse": false
    },
    {
        "id": "de77cfaf.cfb3d",
        "type": "ui_group",
        "name": "Sensor 4",
        "tab": "d5129a11.c2b478",
        "order": 10,
        "disp": true,
        "width": 8,
        "collapse": true
    },
    {
        "id": "cc6b0d90.1c354",
        "type": "ui_group",
        "name": "Sensor 5",
        "tab": "d5129a11.c2b478",
        "order": 11,
        "disp": true,
        "width": 8,
        "collapse": true
    },
    {
        "id": "2b4810e4.a7abc",
        "type": "ui_group",
        "name": "Sensor 6",
        "tab": "d5129a11.c2b478",
        "order": 12,
        "disp": true,
        "width": 8,
        "collapse": true
    },
    {
        "id": "f272d8bc.1f1258",
        "type": "ui_group",
        "name": "Sensor 7",
        "tab": "d5129a11.c2b478",
        "order": 13,
        "disp": true,
        "width": 8,
        "collapse": true
    },
    {
        "id": "5d4d1f39.203d3",
        "type": "ui_group",
        "name": "Sensor 8",
        "tab": "d5129a11.c2b478",
        "order": 14,
        "disp": true,
        "width": 8,
        "collapse": true
    },
    {
        "id": "ea39e33e.e1e4a",
        "type": "ui_group",
        "name": "Sensor 9",
        "tab": "d5129a11.c2b478",
        "order": 15,
        "disp": true,
        "width": "8",
        "collapse": true
    },
    {
        "id": "62172772.5040f8",
        "type": "ui_group",
        "name": "Sensor 14",
        "tab": "d5129a11.c2b478",
        "order": 20,
        "disp": true,
        "width": 8,
        "collapse": true
    },
    {
        "id": "46964e10.8d71",
        "type": "ui_group",
        "name": "Sensor 13",
        "tab": "d5129a11.c2b478",
        "order": 19,
        "disp": true,
        "width": 8,
        "collapse": true
    },
    {
        "id": "b6edb24b.79389",
        "type": "ui_group",
        "name": "Sensor 12",
        "tab": "d5129a11.c2b478",
        "order": 18,
        "disp": true,
        "width": 8,
        "collapse": true
    },
    {
        "id": "88af1aa6.4fd9a8",
        "type": "ui_group",
        "name": "Sensor 11",
        "tab": "d5129a11.c2b478",
        "order": 17,
        "disp": true,
        "width": 8,
        "collapse": true
    },
    {
        "id": "1519e739.96fc29",
        "type": "ui_group",
        "name": "Sensor 10",
        "tab": "d5129a11.c2b478",
        "order": 16,
        "disp": true,
        "width": 8,
        "collapse": true
    },
    {
        "id": "a0308ba2.3cecc8",
        "type": "ui_group",
        "name": "Serial log",
        "tab": "d5129a11.c2b478",
        "order": 3,
        "disp": true,
        "width": "8",
        "collapse": true
    },
    {
        "id": "5a2b7c1c.ab5f14",
        "type": "ui_group",
        "name": "Modulation",
        "tab": "d5129a11.c2b478",
        "order": 4,
        "disp": true,
        "width": "8",
        "collapse": true
    },
    {
        "id": "1cb4d0018af3bdb3",
        "type": "serial-port",
        "serialport": "",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "ed8a75b9445d83d2",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "2b4a56e8.103f4a",
        "order": 5,
        "width": 10,
        "height": 1
    },
    {
        "id": "276cf236fb8ffe30",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "b2debca7.ea722",
        "order": 3,
        "width": 10,
        "height": 1
    },
    {
        "id": "f8ddb226d829f498",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "a0308ba2.3cecc8",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "5a3ac81f66aba8b7",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "18848a5.a3bdb76",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "c5f5afc6f6b45570",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "18848a5.a3bdb76",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "9cbf1369cf547d48",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "18848a5.a3bdb76",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "9e3694f35cf3bb88",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "18848a5.a3bdb76",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "4e56e801ef4ad03f",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "36f009b.e058af6",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "c345ae10d10a7d1a",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "36f009b.e058af6",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "81dd7efc0a6ea5fb",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "36f009b.e058af6",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "e4e0adeda4f641bf",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "36f009b.e058af6",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "2b4bb19796b184e3",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "5cf86100.5fd8",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "a04dd7f97cadd93f",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "5cf86100.5fd8",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "303ce1e89551c40e",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "5cf86100.5fd8",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "e7a45ef03053ce42",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "5cf86100.5fd8",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "ba507f6368c9bb04",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "9142e5f0.a71698",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "75af97378b55c9ff",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "9142e5f0.a71698",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "1292faa6e14ab988",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "9142e5f0.a71698",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "25c3ca63aabaa494",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "9142e5f0.a71698",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "09da8a0a36cab1df",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "de77cfaf.cfb3d",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "0b3e108804c6a187",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "de77cfaf.cfb3d",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "bf07c24dfbd9ced5",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "de77cfaf.cfb3d",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "a1490dd5b585a03b",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "de77cfaf.cfb3d",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "1b9990425584287c",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "cc6b0d90.1c354",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "6c2cc85ef2503df2",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "cc6b0d90.1c354",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "b67f6a20482a88b6",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "cc6b0d90.1c354",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "774f46bb5806f808",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "cc6b0d90.1c354",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "5dff121344133ddc",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "2b4810e4.a7abc",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "1f188cc67a9d316b",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "2b4810e4.a7abc",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "ef3115f2135c6234",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "2b4810e4.a7abc",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "926b082b9d240820",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "2b4810e4.a7abc",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "160e64a9ec9129f7",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "f272d8bc.1f1258",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "e59d7fb34d03647f",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "f272d8bc.1f1258",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "b119f1361eac187b",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "f272d8bc.1f1258",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "3d5a70f48ccd33d5",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "f272d8bc.1f1258",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "6fdac2feea11e287",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "5d4d1f39.203d3",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "13659f78df214c46",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "5d4d1f39.203d3",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "6d9eb7d52a38f962",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "5d4d1f39.203d3",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "4519e2bc6c95c61e",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "5d4d1f39.203d3",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "9d568f2e3756f331",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "ea39e33e.e1e4a",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "530d9caea589442f",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "ea39e33e.e1e4a",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "4b7906ad83753959",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "ea39e33e.e1e4a",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "d362a987ecae3096",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "ea39e33e.e1e4a",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "1036c946244a7c44",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "1519e739.96fc29",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "e19ce1a9dc0310aa",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "1519e739.96fc29",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "1ecc7f61a1165192",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "1519e739.96fc29",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "1d0abcb9d8002224",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "1519e739.96fc29",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "c6f43a876b9d0f38",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "88af1aa6.4fd9a8",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "c7388c75dea418c6",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "88af1aa6.4fd9a8",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "adc1892d5c6113eb",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "88af1aa6.4fd9a8",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "81ddb65716369577",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "88af1aa6.4fd9a8",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "18189b415b53cac0",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "b6edb24b.79389",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "73e5c3d67af1c68b",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "b6edb24b.79389",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "9c21d5ea0c9cddee",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "b6edb24b.79389",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "cbbd252b7090dfb3",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "b6edb24b.79389",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "1791a730cbc7719f",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "46964e10.8d71",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "5dc7bd7add2bf286",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "46964e10.8d71",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "7d81809d095f37ac",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "46964e10.8d71",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "be033778a323a6e7",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "46964e10.8d71",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "5f8ceab8f7bbc6dd",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "62172772.5040f8",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "fd6eeeb7254a7b28",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "62172772.5040f8",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "7d0e23afbf1d06ae",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "62172772.5040f8",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "b9de128f4ea30d3a",
        "type": "ui_spacer",
        "z": "88971af9.c4b578",
        "name": "spacer",
        "group": "62172772.5040f8",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "1ff1e339.f9499d",
        "type": "function",
        "z": "6074a628.24f198",
        "name": "scan subnet",
        "func": "var ipString = env.get('ipString') || '';\nvar start = env.get('start') || 1;\nvar end = env.get('end') || 255;\nvar suffix = env.get('suffix') || '/json';\n\nif (!msg.payload.hasOwnProperty(\"command\")) { // if no command scan complete subnet\n    for (let i=start; i<end+1; i++){\n        node.send({\"url\":ipString+i+\"/json\"})\n    }\n} else { // message form popup menue\n    switch (msg.payload.command){\n        case \"updateDevice\":\n            if (msg.payload.hasOwnProperty(\"$localip\") && \n                msg.payload.name===\"ESP Easy Mega\") {\n                    node.status({fill:\"green\", shape:\"dot\", text:\"scan \"+msg.payload.$localip})\n                    return({\"url\":\"http://\"+msg.payload.$localip+\"/json\"});\n            }\n            break;\n        case \"updateDevices\":\n            for (let i=start; i<end+1; i++){\n                node.send({\"url\":ipString+i+\"/json\"})\n            }\n            break;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 206,
        "y": 85,
        "wires": [
            []
        ],
        "icon": "node-red/white-globe.svg"
    },
    {
        "id": "73ad843.7ad667c",
        "type": "function",
        "z": "a4435987.cef7d8",
        "name": "handle tableData",
        "func": "/* ui table handler is a subflow from Christian-Me\n https://github.com/Christian-Me/remote-device-table */\n\n/* Modification : addition of group name in variables to improve refresh when ui-groups are unhidden\n Copyright 2020 STMicroelectronics */\n \n/*  Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License. */\n   \nvar status = {fill:\"red\",shape:\"dot\",text: \"payload \"};\nvar tableIndex = env.get(\"tableIndex\") || \"$topic\";\nvar tableDataProp = env.get(\"tableDataProp\") || \"row\";\nvar tableContext = env.get(\"tableContext\");\nvar dashboard = env.get(\"dashboard\");\nvar group = env.get(\"group\");\nif (!tableContext.hasOwnProperty(\"tableData\") || !tableContext.hasOwnProperty(\"tableConfig\")) {\n    status.text=\"tableContext not defined\";\n    node.error(status.text);\n    return [{payload:status},null];\n}\n\n// context store to cache table data (memoryOnly prefered)\nvar tableData = flow.get(\"$parent.\"+tableContext.tableData.name,tableContext.tableData.storage);\nif (tableData===undefined) {\n    //node.warn(\"[ui-table handler] tableData initialized!\");\n    tableData={};\n    flow.set(\"$parent.\"+tableContext.tableData.name,tableData,tableContext.tableData.storage);\n}\n\n// context Store to save table configuration (file)\nvar tableConfig = flow.get(\"$parent.\"+tableContext.tableConfig.name,tableContext.tableConfig.storage);\nif (tableConfig===undefined) {\n    //node.warn(\"[ui-table handler] tableConfig initialized!\");\n    tableConfig={ResponsiveLayout:true};\n    flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n}\n\n// context Store to save table configuration (file)\nvar tableEdit;\nif (tableContext.hasOwnProperty(\"tableEdit\")) {\n    tableEdit = flow.get(\"$parent.\"+tableContext.tableEdit.name,tableContext.tableEdit.storage);\n    if (tableEdit===undefined) {\n        //node.warn(\"[ui-table handler] tableEdit initialized!\");\n        tableEdit={};\n        flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n    }\n}\n\n// function to merge partial data into existing table row\nvar mergeObject = function (destination, source, filter) {\n    for (let currentSource in source) {\n        if (source.hasOwnProperty(currentSource)) {\n            if (filter!==undefined && tableEdit && tableEdit.hasOwnProperty(filter) && tableEdit[filter].hasOwnProperty(currentSource)) {\n                destination[currentSource]= tableEdit[filter][currentSource];\n                source[currentSource]=tableEdit[filter][currentSource];\n            } else {\n                destination[currentSource]= source[currentSource];\n            }\n        }    \n    }\n    return source;\n};\n    \n// deep search for a column\nvar searchTabulatorColumn = function (columns,key,match) {\n    var result;\n    for (let column of columns) {\n        if (column.hasOwnProperty(\"columns\")) {\n            result = searchTabulatorColumn(column.columns,key,match);\n            if (result!==undefined) return result;\n        } else if (column.hasOwnProperty(key) && column[key]===match) {\n            return column;\n        }\n    }\n};\n\n// command message to update add or update data on ui-table\nvar msgToTable={};\nmsgToTable.payload={\n    \"command\":\"updateOrAddData\",\n    \"arguments\": [],\n    \"returnPromise\": false\n};\n\nif (msg.hasOwnProperty(tableDataProp)) {\n    // store data for later recover\n    if (!msg.hasOwnProperty(\"topic\")) { // check if index existst\n        status.text=\"msg.topic not defined!\";\n        return [{payload:status},null];\n    }\n    if (!tableData.hasOwnProperty(msg.topic)){ // first seen\n        tableData[msg.topic]={};\n        if (tableEdit && tableEdit.hasOwnProperty(msg.topic)) { // table edits available!\n            Object.keys(tableEdit[msg.topic]).forEach((key) => {\n                msg[tableDataProp][key]=tableEdit[msg.topic][key];\n                tableData[msg.topic][key]=tableEdit[msg.topic][key];\n            })\n        }\n    }\n    if (!tableData[msg.topic].hasOwnProperty(tableIndex)) tableData[msg.topic][tableIndex]=msg.topic;\n    msg[tableDataProp]=mergeObject(tableData[msg.topic],msg[tableDataProp],msg.topic);\n    msg[tableDataProp][tableIndex]=msg.topic;\n    msgToTable.payload.arguments=[[msg[tableDataProp]]];\n    status.fill=\"green\";\n    status.text=msg.topic+\" updated\";\n    return [{payload:status},msgToTable,null];\n} if (msg.payload===\"connect\" || (msg.payload===\"change\" && msg.name===dashboard) ||(msg.payload===\"group\" && msg.group===group) || (msg.hasOwnProperty(\"payload\") && msg.payload.hasOwnProperty(\"command\"))) { \n    if (!msg.hasOwnProperty(\"ui_control\")) {\n        msg.ui_control = env.get('tabulator');\n        status.text+=\" ui_control added\";\n    }\n    //process commands\n    //node.warn({\"command\":msg.payload.command,\"msg\":msg,\"object\":msg.payload.object})\n    if (msg.payload.hasOwnProperty(\"command\")) {\n        status.fill=\"blue\";\n        switch(msg.payload.command) {\n            case 'deleteTable':\n                flow.set(\"$parent.\"+tableContext.tableData.name,undefined,tableContext.tableData.storage);\n                tableData={};\n                status.text=\"tabledata deleted\";\n                //node.warn(\"[ui-table handler] \"+\"tabledata deleted\");\n                break;\n            case 'deleteDevice':\n                if (tableData.hasOwnProperty(msg.payload.object)) {\n                    delete tableData[msg.payload.object];\n                    status.text=msg.payload.object+\" deleted\";\n                } else {\n                    status.fill=\"yellow\";\n                    status.text=msg.payload.object+\" undefined\";\n                }\n                break;\n            case 'ignoreDevice':\n                if (tableData.hasOwnProperty(msg.payload.object)) {\n                    delete tableData[msg.payload.object];\n                    status.text=msg.payload.object+\" will be ignored\";\n                    if (!tableConfig.hasOwnProperty('ignoreDevice')) tableConfig.ignoreDevice={};\n                    tableConfig.ignoreDevice[msg.payload.object]=true;\n                }\n                break;\n            case 'unIgnoreDevice':\n                if (tableConfig.hasOwnProperty('ignoreDevice')) {\n                    delete tableConfig.ignoreDevice[msg.payload.object];\n                }\n                break;\n            case 'unIgnoreDevices':\n                delete tableConfig.ignoreDevice;\n                break;\n            case 'updateData':\n                status.text=\"column \"+msg.payload.column+\" updated\";\n                return [{payload:status},msg];\n            case 'updateTable':\n                status.text=msg.payload.command+\": \";\n                break;\n            case 'columnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=false;\n                break;\n            case 'columnUnHide':\n                if (!tableConfig.hasOwnProperty('columnVisible')) tableConfig.columnVisible={};\n                tableConfig.columnVisible[msg.payload.object]=true;\n                break;\n            case 'columnsUnHide':\n                for (let column in tableConfig.columnVisible) {\n                    if (tableConfig.columnVisible.hasOwnProperty(column)) tableConfig.columnVisible[column]=true;\n                }\n                break;\n            case 'refreshTable':\n                break;\n            case 'restoreColumnOrder':\n                delete tableConfig.columns;\n                break;\n            case 'resetColumnWidth':\n                delete tableConfig.columnWidths;\n                break;\n            case 'setResponsiveLayout':\n                tableConfig.ResponsiveLayout=!tableConfig.ResponsiveLayout;\n                break;\n            default:\n                status.fill=\"red\";\n                status.text=\"unknown command \"+msg.payload.command;\n                node.warn(\"[ui-table handler] \"+status.text);\n                break;\n        }\n        flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n        node.send([{payload:status},null,null]);\n    }\n\n    // crawl through tabulator arrays and updated user defined values\n    var crawlTabulator = function (columns,match,config,property) {\n        for (let column of columns) {\n            if (column.hasOwnProperty(\"columns\")) {\n                crawlTabulator(column.columns,match,config,property);\n            } else if (config.hasOwnProperty(column[match])) column[property]=config[column.field];\n        }\n    };\n    \n    // restore custom column width\n    if (tableConfig.hasOwnProperty(\"columnWidths\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnWidths,\"width\");\n    }\n    \n    // restore custom column hide/show\n    if (tableConfig.hasOwnProperty(\"columnVisible\") && msg.hasOwnProperty(\"ui_control\")) {\n        crawlTabulator(msg.ui_control.tabulator.columns,\"field\",tableConfig.columnVisible,\"visible\");\n    }\n    \n    // restore custom responsive / standard view\n    if (tableConfig.hasOwnProperty(\"ResponsiveLayout\")) {\n        if (!tableConfig.ResponsiveLayout) {\n            msg.ui_control.tabulator.responsiveLayout=false;\n        }\n        msg.ui_control.tabulator.columns.forEach((column,index) => {\n            if (column.formatter===\"responsiveCollapse\") { // hide expand column on any position\n                column.visible=tableConfig.ResponsiveLayout;\n                return;\n            }\n        });\n    }\n\n    // sort columns\n    if (tableConfig.hasOwnProperty(\"columns\") && msg.hasOwnProperty(\"ui_control\") && msg.ui_control.hasOwnProperty(\"tabulator\")) {\n        var addedColumns = 0;\n        var sortColumnsByLayout = function (sortColumns, columnsLayout, targetColumns) {\n            for (var layoutColumn=0;  layoutColumn<columnsLayout.length; layoutColumn++) {\n                for (var sortColumn in sortColumns) {\n                    if (sortColumns[sortColumn].hasOwnProperty(\"columns\")) {\n                        targetColumns.push({\"title\":sortColumns[sortColumn].title, \"columns\":[]});\n                        sortColumnsByLayout(sortColumns[sortColumn].columns,columnsLayout,targetColumns[targetColumns.length-1].columns);\n                        layoutColumn=addedColumns; // jump forward after childes added\n                    } else {\n                        if (columnsLayout[layoutColumn].field===sortColumns[sortColumn].field){\n                            targetColumns.push(sortColumns[sortColumn]);\n                            addedColumns++;\n                            break;\n                        }\n                    }\n                }\n            }\n        };                 \n        var newColumns=[];\n        sortColumnsByLayout(msg.ui_control.tabulator.columns,tableConfig.columns,newColumns);\n        msg.ui_control.tabulator.columns=newColumns;\n    }\n\n    // restore stored lines after connect\n    msg.payload=[];\n    for (let device in tableData) {\n        if (tableConfig && tableConfig.hasOwnProperty(\"ignoreDevice\") && tableConfig.ignoreDevice[device]) {\n            continue;\n        }\n        // merge edits into table\n        if (tableEdit && tableEdit.hasOwnProperty(device)) {\n            let tableRow = RED.util.cloneMessage(tableData[device]);\n            Object.keys(tableEdit[device]).forEach((field) => {\n                tableRow[field]=tableEdit[device][field];\n            });\n            msg.payload.push(tableRow);\n        } else {\n            msg.payload.push(tableData[device]);\n        }\n    }\n    \n    status.fill=\"blue\";\n    status.text+=\" \"+msg.payload.length+\" rows restored\";\n    return [{payload:status},msg];\n} if (msg.hasOwnProperty(\"ui_control\")) {\n    // callback from tabulator\n    status.fill=\"blue\";\n    status.text=\"unknown callback \"+msg.ui_control.callback;\n    switch(msg.ui_control.callback) {\n        case \"columnResized\": // save new column width\n            if (tableConfig.columnWidths===undefined) tableConfig.columnWidths={};\n            tableConfig.columnWidths[msg.ui_control.columnWidths.field]=msg.ui_control.columnWidths.width;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=msg.ui_control.columnWidths.field+\"=\"+msg.ui_control.columnWidths.width+\"px\";\n            break;\n        case \"columnMoved\": // save new column order\n            if (tableConfig.columns===undefined) tableConfig.columns=[];\n            tableConfig.columns=msg.ui_control.columns;\n            flow.set(\"$parent.\"+tableContext.tableConfig.name,tableConfig,tableContext.tableConfig.storage);\n            status.text=\"new column order\";\n            break;\n        case \"cellEdited\":\n            if (tableEdit) {\n                if (!tableEdit.hasOwnProperty(msg[tableIndex])) tableEdit[msg[tableIndex]]={};\n                tableEdit[msg[tableIndex]][msg.field] = msg.payload; // save data and mark es edited field\n                flow.set(\"$parent.\"+tableContext.tableEdit.name,tableEdit,tableContext.tableEdit.storage);\n                status.text=msg[tableIndex]+\" \"+msg.field+\" edited to \"+msg.payload;\n                msg[tableDataProp]={};\n                msg[tableDataProp][tableIndex]=msg[tableIndex];\n                msg[tableDataProp][msg.field]=msg.payload;\n                msgToTable.payload.arguments=[[msg[tableDataProp]]];\n                node.send([{payload:status},msgToTable,msg]);\n            } else {\n                node.error(\"[ui-table handler] no tableEdit store defined!\")\n            }\n            break;\n        case \"rowContext\":\n            msg.ignoredDevices=[];\n            for (let device in tableConfig.ignoreDevice) {\n                if (tableConfig.ignoreDevice.hasOwnProperty(device)) {\n                    msg.ignoredDevices.push({\"text\":device,\"icon\":\"fa fa-plug\",\"topic\":\"unIgnoreDevice\",\"payload\":device})  \n                }\n            }\n            break;\n        case \"headerContext\":\n            msg.hiddenColumns=[];\n            let tabulatorConfig = env.get('tabulator');\n            for (let column in tableConfig.columnVisible) {\n                if (tableConfig.columnVisible.hasOwnProperty(column) &&\n                    !tableConfig.columnVisible[column]) {\n                    let configColumn=searchTabulatorColumn(tabulatorConfig.tabulator.columns,\"field\",column);\n                    let icon;\n                    if (configColumn.hasOwnProperty('title') && configColumn.title.toLowerCase().includes('</i>')) {\n                        // <i class='fa fa-star-half-o'></i> State\n                        let start=configColumn.title.indexOf(\"'fa \");\n                        let end=configColumn.title.indexOf(\"'\",start+1);\n                        icon=configColumn.title.substring(start+4,end);\n                    }\n                    msg.hiddenColumns.push({\"text\":column,\"icon\":icon,\"topic\":\"columnUnHide\",\"payload\":configColumn.field})  \n                }\n            }\n            break;\n        default:\n            // if rowIndex exists pass complete object\n            if (msg.hasOwnProperty(tableIndex)) {\n                msg.rowData=tableData[msg[tableIndex]];\n            }\n            status.text=\"pass message\";\n    }\n    return [{payload:status},null,msg];\n}\n// nothing to do bejond this point\nstatus.text+=\" [\"+msg.payload+\"]\";\nreturn [{payload:status},null];\n",
        "outputs": 3,
        "noerr": 0,
        "x": 192,
        "y": 85,
        "wires": [
            [],
            [],
            []
        ],
        "icon": "font-awesome/fa-table"
    },
    {
        "id": "ddd9017c.d977b",
        "type": "change",
        "z": "d3f1f54f.32ba68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 711,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "2301c971.f840c6",
        "type": "change",
        "z": "d3f1f54f.32ba68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.voltage",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 711,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "5c6f9467.8ab03c",
        "type": "change",
        "z": "d3f1f54f.32ba68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.eui",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 711,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "a6ba8fe6.2e694",
        "type": "change",
        "z": "d3f1f54f.32ba68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.PER",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 711,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "78e4fd7b.a9a684",
        "type": "switch",
        "z": "d3f1f54f.32ba68",
        "name": "Filter EUI and reset",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sensor",
                "vt": "env"
            },
            {
                "t": "eq",
                "v": "reset",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 324,
        "y": 115,
        "wires": [
            [
                "2301c971.f840c6",
                "a6ba8fe6.2e694",
                "ddd9017c.d977b",
                "5c6f9467.8ab03c",
                "de087139.6d50d",
                "ec48745b.0496c8",
                "5553ba2bab33484c",
                "429462e7e8b4bfc4",
                "42b51ac05ca67e83",
                "03f235c5afae724e",
                "b3cde9dd7271d7d6",
                "dca03c4d29550420",
                "8ab22b2b6c842050",
                "31855424eb0b781a",
                "b01b6d2b9d0dc03f"
            ],
            [
                "f739a608.5ed6d8"
            ]
        ]
    },
    {
        "id": "f739a608.5ed6d8",
        "type": "change",
        "z": "d3f1f54f.32ba68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.eui",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.temperature",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.PER",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.voltage",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.missed",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.rssi",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.pressure",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.yaw",
                "pt": "msg",
                "to": "",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.pitch",
                "pt": "msg",
                "to": "",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.roll",
                "pt": "msg",
                "to": "",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.activity",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.distance",
                "pt": "msg",
                "to": "",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.step_count",
                "pt": "msg",
                "to": "",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.swipe_count",
                "pt": "msg",
                "to": "",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.accelaration_avg",
                "pt": "msg",
                "to": "",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload.accelaration_max",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 232,
        "y": 514,
        "wires": [
            [
                "2301c971.f840c6",
                "a6ba8fe6.2e694",
                "ddd9017c.d977b",
                "5c6f9467.8ab03c",
                "de087139.6d50d",
                "ec48745b.0496c8",
                "5553ba2bab33484c",
                "429462e7e8b4bfc4",
                "42b51ac05ca67e83",
                "03f235c5afae724e",
                "b3cde9dd7271d7d6",
                "dca03c4d29550420",
                "8ab22b2b6c842050",
                "31855424eb0b781a",
                "b01b6d2b9d0dc03f"
            ]
        ]
    },
    {
        "id": "de087139.6d50d",
        "type": "change",
        "z": "d3f1f54f.32ba68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.rssi",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 242,
        "wires": [
            []
        ]
    },
    {
        "id": "ec48745b.0496c8",
        "type": "change",
        "z": "d3f1f54f.32ba68",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.missed",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 712,
        "y": 283,
        "wires": [
            []
        ]
    },
    {
        "id": "5553ba2bab33484c",
        "type": "change",
        "z": "d3f1f54f.32ba68",
        "name": "pressure",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.pressure",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 691,
        "y": 323,
        "wires": [
            []
        ]
    },
    {
        "id": "429462e7e8b4bfc4",
        "type": "change",
        "z": "d3f1f54f.32ba68",
        "name": "yaw_pitch_roll",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.yaw_pitch_roll",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 713,
        "y": 364,
        "wires": [
            []
        ]
    },
    {
        "id": "42b51ac05ca67e83",
        "type": "change",
        "z": "d3f1f54f.32ba68",
        "name": "activity",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.activity",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 683,
        "y": 405,
        "wires": [
            []
        ]
    },
    {
        "id": "03f235c5afae724e",
        "type": "change",
        "z": "d3f1f54f.32ba68",
        "name": "distance",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.distance",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 692,
        "y": 447,
        "wires": [
            []
        ]
    },
    {
        "id": "b3cde9dd7271d7d6",
        "type": "change",
        "z": "d3f1f54f.32ba68",
        "name": "step_count",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.step_count",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 487,
        "wires": [
            []
        ]
    },
    {
        "id": "dca03c4d29550420",
        "type": "change",
        "z": "d3f1f54f.32ba68",
        "name": "swipe_count",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.swipe_count",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 532,
        "wires": [
            []
        ]
    },
    {
        "id": "8ab22b2b6c842050",
        "type": "change",
        "z": "d3f1f54f.32ba68",
        "name": "accelaration_avg",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.acceleration_avg",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 723,
        "y": 571,
        "wires": [
            []
        ]
    },
    {
        "id": "31855424eb0b781a",
        "type": "change",
        "z": "d3f1f54f.32ba68",
        "name": "acceleration_max",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.acceleration_max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 726,
        "y": 614,
        "wires": [
            []
        ]
    },
    {
        "id": "b01b6d2b9d0dc03f",
        "type": "change",
        "z": "d3f1f54f.32ba68",
        "name": "humidity",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.humidity",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 691,
        "y": 661,
        "wires": [
            []
        ]
    },
    {
        "id": "e9200350.d00d7",
        "type": "comment",
        "z": "82530ef4.8a0f6",
        "name": "Please select this node to see the demo description in the right panel (Node information)",
        "info": "## This flow is used to monitor values of STM32WL sensors.\n## \n\n# Wiki  :\nDetailed help and information is available on wiki page : [STM32_Wireless_Long_Range_demo](https://wiki.st.com/stm32mcu/index.php?title=STM32CubeMonitor:How_to_start_with_STM32_Wireless_Long_Range_demo)\n\n# Demo description :\nThe demo shows data from wireless sensor connected to a concentrator. The sensors and the concentrator are based on STM32WL boards.\nThe concentrator is connected with serial port to STM32cubeMonitor to display the data from sensors.\nThere is one concentrator, and up to 15 sensors.\nWhen the demo starts, the concentrotr is configured with the region information to select the correct frequency to use. Then, the concentrator will broadcast beacons to synchronize the sensors. Then sensor will send the data (voltage, temperature) periodically.\n\n# Board configuration \nThe software \"concentrator.bin\" must be loaded in the concentrator. The concentrator must be connected to computer with an usb cable. \n\nThe sensors devices must be loaded with software \"sensor.bin\"\n\n# Connection to computer \nConnect the concentrator board to the computer. \nIn the \"UART configuration\" tab, select the COM port \nOpen the node Â« SERIAL IN Â» and click on the pencil to edit the Serial Port configuration.\nClick on the search icon at right of âSerial Portâ box, to display the list of connected uart. Select the concentrator COM port. Set the baud rate to 9600 Bps. Other parameters donât need to be changed.\nClick on âAdd/Updateâ button : the port Serial-port configuration is ready.\nOpen the node âSERIAL OUTâ and check the Serial-port configuration.\nThe serial port is configured.\n\n# Start the demo\n\nOpen the demo with âDashboardâ button.\nSelect the Region and subRegion and then press start.\nThe sensor list is displayed and will be updated when data are received. \n\n### Sensor List :\nEach detected sensor is added in the list, and information are updated :  \n -  EUI : Sensor unique identifier \n -  Packets received : Number of packets received from this sensor\n -  Packets missed : The sensor increases the packet ID for each packet sent. If there is a gap between previous packet Id and the current one, it means some packets have been lost. This is counted in \"missed packets\". \n -  RSSI : Received Signal Strength Indicator : show the level of power received\n -  PER : Packet Error Rate : Gives the % of lost packets. 0 if perfect. \n -  SNR : Signal to Noise Ratio : give an indication of signal quality. High value are better.\n -  Temp : Sensor temperature value. (Use STM32 internal sensor)\n -  Voltage : Power supply voltage.  Should be around 3.3V when board is usb powered.\n\nThe \"COUNTER RESET\" button set to 0 the received packets, the missed packets and the PER.\nThe \"RESTART\" button allows to reset te concentrator and goes back to Region selection page.\n\n\n### Serial log :\nThe Serial port log shows the AT commands sent to the concentrator (left arrow), and the answers (right arrow). \n### Sensor panels :\nSome \"Sensor x\" panels are added when sensors are detected. The panels can be opened by clicking on the sensor list or with the blue arrows on the right of the panels.  Each Panel shows temperature and RSSI value history in a chart and display the voltage in a gauge.\n\n\n\n\n\n\n\n",
        "x": 480,
        "y": 180,
        "wires": []
    },
    {
        "id": "29c2e027.b7b9f",
        "type": "serial out",
        "z": "41545e6d.1fcf9",
        "name": "SERIAL OUT",
        "serial": "1cb4d0018af3bdb3",
        "x": 450,
        "y": 220,
        "wires": []
    },
    {
        "id": "32f8b61e.64252a",
        "type": "link in",
        "z": "41545e6d.1fcf9",
        "name": "Serial port output",
        "links": [
            "ccb17de7.4dea4"
        ],
        "x": 275,
        "y": 220,
        "wires": [
            [
                "29c2e027.b7b9f",
                "f35ae12a.0eaf6"
            ]
        ]
    },
    {
        "id": "bebf174b.4bdaa8",
        "type": "serial in",
        "z": "41545e6d.1fcf9",
        "name": "SERIAL IN",
        "serial": "1cb4d0018af3bdb3",
        "x": 660,
        "y": 220,
        "wires": [
            [
                "9c9cf24b.3034e",
                "745d116.fd26bf"
            ]
        ]
    },
    {
        "id": "745d116.fd26bf",
        "type": "link out",
        "z": "41545e6d.1fcf9",
        "name": "Serial port input",
        "links": [
            "f781b668.f78bf8",
            "58eba41e.09955c"
        ],
        "x": 1075,
        "y": 220,
        "wires": []
    },
    {
        "id": "9c9cf24b.3034e",
        "type": "debug",
        "z": "41545e6d.1fcf9",
        "name": "Serial Port In",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 850,
        "y": 280,
        "wires": []
    },
    {
        "id": "4c0d4bb0.5c3d24",
        "type": "status",
        "z": "41545e6d.1fcf9",
        "name": "Serial port status",
        "scope": [
            "bebf174b.4bdaa8"
        ],
        "x": 900,
        "y": 340,
        "wires": [
            [
                "745d116.fd26bf"
            ]
        ]
    },
    {
        "id": "8d195abb.83fca8",
        "type": "comment",
        "z": "41545e6d.1fcf9",
        "name": "SERIAL PORT CONFIGURATION",
        "info": "",
        "x": 240,
        "y": 100,
        "wires": []
    },
    {
        "id": "120b5ba7.2c48d4",
        "type": "comment",
        "z": "41545e6d.1fcf9",
        "name": "From AT CMD",
        "info": "",
        "x": 170,
        "y": 180,
        "wires": []
    },
    {
        "id": "f35ca0d8.aa7ff",
        "type": "comment",
        "z": "41545e6d.1fcf9",
        "name": "Select the Serial Port in this node",
        "info": "**SERIAL PORT PARAMETERS**\n\nTo change the serial port, open the node \"SERIAL OUT\" and \"SERIAL IN\"\nThe Serial port must be configured with :\n - Speed : 9600 Bps\n - 8 bits\n - Parity None\n - 1 Stop bit\n - COM port number\n \n\n",
        "x": 450,
        "y": 160,
        "wires": []
    },
    {
        "id": "f35ae12a.0eaf6",
        "type": "debug",
        "z": "41545e6d.1fcf9",
        "name": "Serial Port Out",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 280,
        "wires": []
    },
    {
        "id": "b2265452.ec20a8",
        "type": "comment",
        "z": "41545e6d.1fcf9",
        "name": "To AT CMD",
        "info": "",
        "x": 1130,
        "y": 180,
        "wires": []
    },
    {
        "id": "54e7683a.ac7648",
        "type": "finite-state-machine",
        "z": "b56598ed.0fee28",
        "name": "FSM",
        "fsmDefinition": "{\"state\":{\"status\":\"INIT\"},\"transitions\":{\"INIT\":{\"resetok\":\"IDLE\",\"start\":\"INIT\",\"connect\":\"INIT\"},\"IDLE\":{\"start\":\"SEND_REGION\",\"connect\":\"INIT\"},\"SEND_REGION\":{\"disconnect\":\"INIT\",\"error\":\"INIT\",\"ok\":\"SEND_SUBREGION\",\"resetok\":\"IDLE\"},\"SEND_SUBREGION\":{\"disconnect\":\"INIT\",\"error\":\"INIT\",\"ok\":\"STARTING\",\"resetok\":\"IDLE\"},\"STARTING\":{\"ok\":\"STARTED\",\"error\":\"INIT\",\"disconnect\":\"INIT\",\"resetok\":\"IDLE\"},\"STARTED\":{\"ok\":\"STARTED\",\"error\":\"INIT\",\"start\":\"SEND_REGION\",\"disconnect\":\"INIT\",\"resetok\":\"IDLE\"}}}",
        "sendInitialState": false,
        "sendStateWithoutChange": true,
        "showTransitionErrors": false,
        "x": 470,
        "y": 620,
        "wires": [
            [
                "2f4385c9.e3c0ea",
                "defbd333.00d98"
            ]
        ]
    },
    {
        "id": "2f4385c9.e3c0ea",
        "type": "switch",
        "z": "b56598ed.0fee28",
        "name": "state",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "INIT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "IDLE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SEND_REGION",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "SEND_SUBREGION",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STARTING",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 5,
        "x": 650,
        "y": 620,
        "wires": [
            [
                "15f1c6dd.943c19",
                "9bccaeb2.19b6e"
            ],
            [
                "7334c8c4.cfa818",
                "9bccaeb2.19b6e"
            ],
            [
                "70224002.adff",
                "836d0bf9.5ab978",
                "13f5413f.c39ebf"
            ],
            [
                "5602efa7.2794a"
            ],
            [
                "c429255.b81b4d8"
            ]
        ]
    },
    {
        "id": "15f1c6dd.943c19",
        "type": "function",
        "z": "b56598ed.0fee28",
        "name": "Init board",
        "func": "msg.payload=\"ATZ\"\nmsg.flow=\"DEMO\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 980,
        "y": 740,
        "wires": [
            [
                "7db21ce.11791e4"
            ]
        ]
    },
    {
        "id": "7db21ce.11791e4",
        "type": "link out",
        "z": "b56598ed.0fee28",
        "name": "send to at command",
        "links": [
            "e7523cba.c8aba"
        ],
        "x": 1275,
        "y": 800,
        "wires": []
    },
    {
        "id": "84334ee1.e5381",
        "type": "link in",
        "z": "b56598ed.0fee28",
        "name": "receive from AT command",
        "links": [
            "49ce2c8c.639474",
            "97abf4fc.33d908"
        ],
        "x": 155,
        "y": 780,
        "wires": [
            [
                "b89a53c5.fb6bd"
            ]
        ]
    },
    {
        "id": "f51e26ed.f6f1f8",
        "type": "ui_button",
        "z": "b56598ed.0fee28",
        "name": "Start button",
        "group": "2b4a56e8.103f4a",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "START",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "start",
        "topicType": "str",
        "x": 150,
        "y": 540,
        "wires": [
            [
                "54e7683a.ac7648"
            ]
        ]
    },
    {
        "id": "70224002.adff",
        "type": "function",
        "z": "b56598ed.0fee28",
        "name": "Init region",
        "func": "msg.payload=\"AT+REGION=\"+flow.get(\"Region\",\"file\");\nmsg.flow=\"DEMO\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 980,
        "y": 780,
        "wires": [
            [
                "7db21ce.11791e4"
            ]
        ]
    },
    {
        "id": "5602efa7.2794a",
        "type": "function",
        "z": "b56598ed.0fee28",
        "name": "Init sub region",
        "func": "msg.payload=\"AT+SUBREGION=\" + flow.get(\"SubRegion\",\"file\");\nmsg.flow=\"DEMO\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 820,
        "wires": [
            [
                "7db21ce.11791e4"
            ]
        ]
    },
    {
        "id": "c429255.b81b4d8",
        "type": "function",
        "z": "b56598ed.0fee28",
        "name": "start ",
        "func": "msg.payload=\"AT+BEACON_ON\"\nmsg.flow=\"DEMO\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 860,
        "wires": [
            [
                "7db21ce.11791e4"
            ]
        ]
    },
    {
        "id": "b89a53c5.fb6bd",
        "type": "switch",
        "z": "b56598ed.0fee28",
        "name": "dispatch msg",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "data",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "lost",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 270,
        "y": 780,
        "wires": [
            [
                "f2cc888c.355a28"
            ],
            [
                "a9f36111.1e765"
            ],
            [
                "52651e58.8a348",
                "54e7683a.ac7648"
            ]
        ]
    },
    {
        "id": "f2cc888c.355a28",
        "type": "function",
        "z": "b56598ed.0fee28",
        "name": "parse data",
        "func": "var pos= msg.payload.search(\"RCV\");\nif (pos==3){\n    var data= msg.payload.split(\",\");\n    if (data[2]===\"1:0\") {\n    msg.payload={\n        eui : data[0].substring(7,20),\n        msgId : parseInt(data[1]),\n        version: data[2],\n        rssi : data[3],\n        snr : data[4],\n        temperature : data[5],\n        voltage : data [6],\n        pressure: undefined,\n        yaw_pitch_roll: undefined,\n        humidity: undefined,\n        activity: undefined,\n        distance: undefined,\n        step_count: undefined,\n        swipe_count: undefined,\n        acceleration_avg: undefined,\n        acceleration_max: undefined\n        };\n    } else {\n    msg.payload={\n        eui : data[0].substring(7,20),\n        msgId : parseInt(data[1]),\n        version: data[2],\n        rssi : data[3],\n        snr : data[4],\n        temperature : data[5],\n        pressure : data[6],\n        yaw_pitch_roll : data[7],\n        humidity : data [8],\n        activity : parseInt(data [9]),\n        distance : data [10],\n        step_count : data [11],\n        swipe_count : data [12],\n        acceleration_avg : data [13],\n        acceleration_max : data [14],\n        voltage : data [15]\n        };    \n    }\n}\nmsg.pos=pos;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 980,
        "wires": [
            [
                "23ae891.d5f2a76"
            ]
        ]
    },
    {
        "id": "23ae891.d5f2a76",
        "type": "function",
        "z": "b56598ed.0fee28",
        "name": "compute sensor data",
        "func": "// read the sensor list\nvar sensorList = flow.get(\"sensorList\");\nif (sensorList===undefined ) {\n    sensorList=[];\n    flow.set(\"sensorList\", sensorList);\n}\nvar index=-1;\nvar newSensor=false;\n\n// search the sensor in the list\nsensorList.forEach(function(item,i,array){\n   if (item.eui==msg.payload.eui) {\n       index=i;\n   }\n});\n\nif (index===-1) {\n    // sensor not found, add new sensor in the list\n    if (sensorList.length>14) { \n        // List full, discard message\n        return null;\n    }\n    newSensor=true;\n    index=sensorList.length;\n    sensorList.push({\n        \"eui\":msg.payload.eui,\n        \"received\":0,\n        \"missed\":0,\n        \"PER\":0,\n        \"index\":index,\n        \"lastMsgId\":msg.payload.msgId-1,\n        \"lost\":false\n        });\n\n} \n\n// compute the sensor information\nvar sensor = sensorList[index];\n\nif (sensor.lost===true){\n    newSensor=true;\n}\n\nif (msg.payload.msgId<=sensor.lastMsgId)  {\n// wrap or reset of the counter (8 bit)   \n    sensor.lastMsgId=msg.payload.msgId-1;\n}\nif (msg.payload.msgId>sensor.lastMsgId+1) {\n    // missed packet detected\n    sensor.missed=sensor.missed+ (msg.payload.msgId-sensor.lastMsgId-1);\n}\nsensor.lastMsgId=msg.payload.msgId;\nsensor.received=sensor.received+1;\nsensor.rssi=msg.payload.rssi;\nsensor.snr=msg.payload.snr;\nsensor.temperature=msg.payload.temperature;\nsensor.voltage=msg.payload.voltage;\nsensor.PER=new Intl.NumberFormat('en-IN', { maximumSignificantDigits: 3 }).format(100*sensor.missed/(sensor.missed+sensor.received));\nsensor.lost = false;//flow.set(\"sensorList\", sensorList);\nif (msg.payload.version === \"1:1\"){\n    sensor.pressure=msg.payload.pressure;\n    sensor.yaw_pitch_roll=msg.payload.yaw_pitch_roll;\n    sensor.humidity=msg.payload.humidity;\n    sensor.activity=msg.payload.activity;\n    sensor.distance=msg.payload.distance;\n    sensor.step_count=msg.payload.step_count;\n    sensor.swipe_count=msg.payload.swipe_count;\n    sensor.acceleration_avg=msg.payload.acceleration_avg;\n    sensor.acceleration_max=msg.payload.acceleration_max;\n}\n\n// build the message with data for the table\nmsg.topic=index;\nmsg.payload.PER=sensor.PER;\nmsg.payload.index=sensor.index;\nmsg.payload.received=sensor.received;\nmsg.payload.missed=sensor.missed;\n\nif (newSensor===true) {\n    // send the new sensor index to activate the chart.\n    return [msg, { payload:index }];\n}\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 980,
        "wires": [
            [
                "b95a592d.895b98"
            ],
            [
                "8c4bb7ba.f91318",
                "6833db71.3f6884",
                "60b8eee8.8186c"
            ]
        ]
    },
    {
        "id": "6ccf1939.053398",
        "type": "ui_table",
        "z": "b56598ed.0fee28",
        "group": "b2debca7.ea722",
        "name": "Sensor list",
        "order": 4,
        "width": 16,
        "height": 7,
        "columns": [],
        "outputs": 1,
        "cts": true,
        "x": 796,
        "y": 1421,
        "wires": [
            [
                "6f6cccfc.83cc94",
                "5167cc00.daca44"
            ]
        ]
    },
    {
        "id": "7e5a4021.e0b39",
        "type": "ui_ui_control",
        "z": "b56598ed.0fee28",
        "name": "",
        "events": "all",
        "x": 1420,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "6f6cccfc.83cc94",
        "type": "function",
        "z": "b56598ed.0fee28",
        "name": "Display charts",
        "func": "\nvar UIConfig={\n    \"group\": {\n        \"open\": [\"STM32WL_Demo_Sensor_\"+msg.payload.index ]\n    }\n}\n\n\nmsg.payload=UIConfig;\nreturn msg;\n    \n",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 1380,
        "wires": [
            [
                "e680c4b.64fe538"
            ]
        ],
        "info": "This function "
    },
    {
        "id": "9ad4d118.29d5c",
        "type": "inject",
        "z": "b56598ed.0fee28",
        "name": "Initialize",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.2",
        "topic": "reset",
        "payload": "",
        "payloadType": "str",
        "x": 160,
        "y": 660,
        "wires": [
            [
                "102e566e.04b33a"
            ]
        ]
    },
    {
        "id": "44b1b162.cefb3",
        "type": "ui_dropdown",
        "z": "b56598ed.0fee28",
        "name": "Region",
        "label": "Region",
        "tooltip": "",
        "place": "Select option",
        "group": "2b4a56e8.103f4a",
        "order": 2,
        "width": 8,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "869.525 MHz - European Union",
                "value": "0",
                "type": "str"
            },
            {
                "label": "925.000 MHz - United States/Australia",
                "value": "1",
                "type": "str"
            },
            {
                "label": "923.400 MHz - Asia",
                "value": "2",
                "type": "str"
            },
            {
                "label": "470.300 MHz - China",
                "value": "3",
                "type": "str"
            },
            {
                "label": "865.100 MHz - India",
                "value": "4",
                "type": "str"
            },
            {
                "label": "868.950 MHz - Russia",
                "value": "5",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "Region",
        "x": 500,
        "y": 140,
        "wires": [
            [
                "304befdd.2d752"
            ]
        ]
    },
    {
        "id": "304befdd.2d752",
        "type": "function",
        "z": "b56598ed.0fee28",
        "name": "Configure SubRegion",
        "func": "if (msg.topic===\"Region\") {\n    flow.set (\"Region\",msg.payload,\"file\");\n    var subRegion=[];\n    switch (msg.payload) {\n        case \"0\" : subRegion=[{\"European Union\":\"0\"}];\n        break;\n        case \"1\" : subRegion=[ {\"Australia\":\"1\"}, {\"United Stated\":\"0\"}];\n        break;\n        case \"2\" : subRegion=[ {\"Generic Asia\":\"2\"}, {\"Japan\":\"1\"}, {\"Republic of Korea\":\"0\"}  ];\n        break;\n        case \"3\" : subRegion=[ {\"China\":\"0\"}];\n        break;\n        case \"4\" : subRegion=[ {\"India\":\"0\"}];\n        break;\n        case \"5\" : subRegion=[ {\"Russia\":\"0\"}];\n        break;\n    }\n    msg.payload=flow.get(\"SubRegion\");\n    msg.topic=\"SubRegion\";\n    msg.options=subRegion;\n    return msg;\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 140,
        "wires": [
            [
                "7c171c12.5eda94"
            ]
        ]
    },
    {
        "id": "7c171c12.5eda94",
        "type": "ui_dropdown",
        "z": "b56598ed.0fee28",
        "name": "SubRegion",
        "label": "SubRegion",
        "tooltip": "",
        "place": "Select option",
        "group": "2b4a56e8.103f4a",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Europe",
                "value": "0",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 910,
        "y": 140,
        "wires": [
            [
                "c47ed110.7f8b"
            ]
        ]
    },
    {
        "id": "c47ed110.7f8b",
        "type": "change",
        "z": "b56598ed.0fee28",
        "name": "Set SubRegion",
        "rules": [
            {
                "t": "set",
                "p": "SubRegion",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "bb7cf606.6f5108",
        "type": "ui_ui_control",
        "z": "b56598ed.0fee28",
        "name": "",
        "events": "all",
        "x": 1400,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "836d0bf9.5ab978",
        "type": "change",
        "z": "b56598ed.0fee28",
        "name": "Display the sensor panels",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"STM32WL_Demo_Start\"],\"show\":[\"STM32WL_Demo_Sensor_List\",\"STM32WL_Demo_Serial_log\",\"STM32WL_Demo_Modulation\"]}}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "initDone",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 620,
        "wires": [
            [
                "bb7cf606.6f5108"
            ]
        ]
    },
    {
        "id": "969bc15d.7da55",
        "type": "change",
        "z": "b56598ed.0fee28",
        "name": "Display the country page",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"STM32WL_Demo_Sensor_List\",\"STM32WL_Demo_Sensor_0\",\"STM32WL_Demo_Sensor_1\",\"STM32WL_Demo_Sensor_2\",\"STM32WL_Demo_Sensor_3\",\"STM32WL_Demo_Sensor_4\",\"STM32WL_Demo_Sensor_5\",\"STM32WL_Demo_Sensor_6\",\"STM32WL_Demo_Sensor_7\",\"STM32WL_Demo_Sensor_8\",\"STM32WL_Demo_Sensor_9\",\"STM32WL_Demo_Sensor_10\",\"STM32WL_Demo_Sensor_11\",\"STM32WL_Demo_Sensor_12\",\"STM32WL_Demo_Sensor_13\",\"STM32WL_Demo_Sensor_14\",\"STM32WL_Demo_Serial_log\",\"STM32WL_Demo_Modulation\"],\"close\":[\"STM32WL_Demo_Sensor_0\",\"STM32WL_Demo_Sensor_1\",\"STM32WL_Demo_Sensor_2\",\"STM32WL_Demo_Sensor_3\",\"STM32WL_Demo_Sensor_4\",\"STM32WL_Demo_Sensor_5\",\"STM32WL_Demo_Sensor_6\",\"STM32WL_Demo_Sensor_7\",\"STM32WL_Demo_Sensor_8\",\"STM32WL_Demo_Sensor_9\",\"STM32WL_Demo_Sensor_10\",\"STM32WL_Demo_Sensor_11\",\"STM32WL_Demo_Sensor_12\",\"STM32WL_Demo_Sensor_13\",\"STM32WL_Demo_Sensor_14\",\"STM32WL_Demo_Serial_log\",\"STM32WL_Demo_Modulation\"],\"show\":[\"STM32WL_Demo_Start\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 460,
        "wires": [
            [
                "bb7cf606.6f5108"
            ]
        ]
    },
    {
        "id": "b960d559.72c968",
        "type": "ui_text",
        "z": "b56598ed.0fee28",
        "group": "2b4a56e8.103f4a",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "home page title",
        "label": "Select region and subregion to start the demo",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 600,
        "y": 80,
        "wires": []
    },
    {
        "id": "b95a592d.895b98",
        "type": "link out",
        "z": "b56598ed.0fee28",
        "name": "sensor data",
        "links": [
            "d9fb768d.070868",
            "4c181663.4e0498",
            "a3b3e832.19b168"
        ],
        "x": 915,
        "y": 980,
        "wires": []
    },
    {
        "id": "b2d51966.2c5528",
        "type": "link out",
        "z": "b56598ed.0fee28",
        "name": "Clear data",
        "links": [
            "4c181663.4e0498",
            "d15781b5.e030a"
        ],
        "x": 1135,
        "y": 500,
        "wires": []
    },
    {
        "id": "d15781b5.e030a",
        "type": "link in",
        "z": "b56598ed.0fee28",
        "name": "Clear data",
        "links": [
            "b2d51966.2c5528",
            "b7886fe7.1dfc",
            "a4b70101.708f9"
        ],
        "x": 155,
        "y": 1420,
        "wires": [
            [
                "97cf6c17.13ea"
            ]
        ]
    },
    {
        "id": "500a276c.f10388",
        "type": "subflow:a4435987.cef7d8",
        "z": "b56598ed.0fee28",
        "name": "",
        "env": [
            {
                "name": "tabulator",
                "value": "{\"tabulator\":{\"index\":\"index\",\"layout\":\"fitColumns\",\"movableColumns\":false,\"groupBy\":\"\",\"columnResized\":\"function(column){     var newColumn = {         field: column._column.field,         visible: column._column.visible,         width: column._column.width,         widthFixed: column._column.widthFixed,         widthStyled: column._column.widthStyled     }; this.send({topic:this.config.topic,ui_control:{callback:'columnResized',columnWidths:newColumn}}); }\",\"columns\":[{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"\",\"field\":\"index\",\"align\":\"center\",\"width\":50},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"EUI\",\"field\":\"eui\",\"align\":\"center\",\"width\":100},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Packets\",\"columns\":[{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Received\",\"field\":\"received\",\"width\":100,\"align\":\"center\"},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Missed\",\"field\":\"missed\",\"width\":100,\"align\":\"center\"}]},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Signal quality\",\"columns\":[{\"formatterParams\":{\"target\":\"_blank\",\"min\":-120,\"max\":1,\"legend\":\"function (value) {return '&nbsp;&nbsp;'+value+' dBm';}\"},\"title\":\"RSSI\",\"field\":\"rssi\",\"formatter\":\"progress\",\"width\":70},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"PER\",\"field\":\"PER\",\"align\":\"center\",\"formatter\":\"function(cell, formatterParams, onRendered){return cell.getValue()+' %'; }\",\"width\":70},{\"formatterParams\":{\"target\":\"_blank\",\"min\":-20,\"max\":20,\"legend\":\"function (value) {return '&nbsp;&nbsp;'+value;}\",\"legendAlign\":\"center\"},\"title\":\"SNR\",\"field\":\"snr\",\"formatter\":\"progress\",\"width\":70}]},{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Measurements\",\"columns\":[{\"formatterParams\":{\"target\":\"_blank\"},\"title\":\"Temp\",\"field\":\"temperature\",\"width\":90,\"align\":\"center\",\"formatter\":\"function(cell, formatterParams, onRendered){return cell.getValue()+' Â°C'; }\"},{\"title\":\"Voltage\",\"field\":\"voltage\",\"align\":\"center\",\"formatter\":\"function(cell, formatterParams, onRendered){return cell.getValue()+' V'; }\"}]}]},\"customHeight\":12}",
                "type": "json"
            },
            {
                "name": "tableDataProp",
                "value": "tableData",
                "type": "str"
            },
            {
                "name": "tableIndex",
                "value": "msg.topic",
                "type": "str"
            },
            {
                "name": "dashboard",
                "value": "STM32WL Demo",
                "type": "str"
            },
            {
                "name": "tableContext",
                "value": "{\"tableData\":{\"name\":\"tableData\"},\"tableConfig\":{\"name\":\"tableConfig\"},\"tableEdit\":{\"name\":\"tableEdit\"}}",
                "type": "json"
            }
        ],
        "x": 600,
        "y": 1420,
        "wires": [
            [
                "6ccf1939.053398"
            ],
            []
        ]
    },
    {
        "id": "cc90d9b8.48c6d8",
        "type": "ui_ui_control",
        "z": "b56598ed.0fee28",
        "name": "",
        "events": "all",
        "x": 360,
        "y": 1480,
        "wires": [
            [
                "500a276c.f10388"
            ]
        ]
    },
    {
        "id": "97cf6c17.13ea",
        "type": "change",
        "z": "b56598ed.0fee28",
        "name": "Reset table",
        "rules": [
            {
                "t": "set",
                "p": "payload.command",
                "pt": "msg",
                "to": "deleteTable",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 1420,
        "wires": [
            [
                "500a276c.f10388"
            ]
        ]
    },
    {
        "id": "aa95cbe3.ea11b8",
        "type": "change",
        "z": "b56598ed.0fee28",
        "name": "Inject data in the table",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "tableData",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1360,
        "wires": [
            [
                "500a276c.f10388"
            ]
        ]
    },
    {
        "id": "9bccaeb2.19b6e",
        "type": "function",
        "z": "b56598ed.0fee28",
        "name": "Reset the UI",
        "func": "if (msg.payload.status===\"INIT\"||msg.payload.status===\"IDLE\" ) {\n\n    return { \n        payload:\"uiInit\"\n    }   ;\n}\n\nif (msg.payload!==\"connect\") {\n    return null;\n}\n\nif ( flow.get(\"initDone\") === true ) {\n    return null;        \n}\n\nflow.set(\"initDone\",true);\n \n newMsg={ \n     payload:\"uiInit\"\n }   ;\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 440,
        "wires": [
            [
                "9426b6f1.b691b8",
                "969bc15d.7da55"
            ]
        ]
    },
    {
        "id": "9426b6f1.b691b8",
        "type": "link out",
        "z": "b56598ed.0fee28",
        "name": "UI_INIT",
        "links": [
            "2c4721ab.33202e",
            "4e83f083.855a3",
            "1988f51f.2bbb9b"
        ],
        "x": 1135,
        "y": 420,
        "wires": []
    },
    {
        "id": "4e83f083.855a3",
        "type": "link in",
        "z": "b56598ed.0fee28",
        "name": "",
        "links": [
            "9426b6f1.b691b8",
            "16c19018.77704"
        ],
        "x": 155,
        "y": 140,
        "wires": [
            [
                "8bf62aa3.1a0cf8"
            ]
        ]
    },
    {
        "id": "8bf62aa3.1a0cf8",
        "type": "change",
        "z": "b56598ed.0fee28",
        "name": "Reset region",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(file)::Region",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 140,
        "wires": [
            [
                "44b1b162.cefb3"
            ]
        ]
    },
    {
        "id": "7334c8c4.cfa818",
        "type": "change",
        "z": "b56598ed.0fee28",
        "name": "Reset the data",
        "rules": [
            {
                "t": "delete",
                "p": "sensorList",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "selected_sensor",
                "pt": "flow"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "period",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 500,
        "wires": [
            [
                "b2d51966.2c5528"
            ]
        ],
        "info": "This node reset the data :\n- list of nodes stored in the flow\n- last selected sensor \n- format a message to clear the graphs and table (set the msg.topic to \"reset\")"
    },
    {
        "id": "95778db6.b0e55",
        "type": "ui_button",
        "z": "b56598ed.0fee28",
        "name": "Reset button",
        "group": "b2debca7.ea722",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Restart",
        "tooltip": "Click to restart the demo",
        "color": "",
        "bgcolor": "",
        "icon": "replay",
        "payload": "reset",
        "payloadType": "str",
        "topic": "reset",
        "topicType": "str",
        "x": 150,
        "y": 600,
        "wires": [
            [
                "102e566e.04b33a"
            ]
        ]
    },
    {
        "id": "9b23f9f9.6b9b18",
        "type": "ui_ui_control",
        "z": "b56598ed.0fee28",
        "name": "",
        "events": "connect",
        "x": 780,
        "y": 440,
        "wires": [
            [
                "9bccaeb2.19b6e"
            ]
        ]
    },
    {
        "id": "bb0e2d6a.f9ae2",
        "type": "change",
        "z": "b56598ed.0fee28",
        "name": "Delete reset flag",
        "rules": [
            {
                "t": "delete",
                "p": "initDone",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "632a41.9d7aa5c",
        "type": "inject",
        "z": "b56598ed.0fee28",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "reset UI at deploy",
        "payload": "",
        "payloadType": "str",
        "x": 170,
        "y": 1640,
        "wires": [
            [
                "bb0e2d6a.f9ae2"
            ]
        ]
    },
    {
        "id": "a3b3e832.19b168",
        "type": "link in",
        "z": "b56598ed.0fee28",
        "name": "",
        "links": [
            "b95a592d.895b98"
        ],
        "x": 160,
        "y": 1360,
        "wires": [
            [
                "aa95cbe3.ea11b8"
            ]
        ]
    },
    {
        "id": "ebad1e91.0f6d2",
        "type": "comment",
        "z": "b56598ed.0fee28",
        "name": "Manage the Sensor List in the dashboard",
        "info": "",
        "x": 740,
        "y": 1300,
        "wires": []
    },
    {
        "id": "b5d2abfb.e32028",
        "type": "comment",
        "z": "b56598ed.0fee28",
        "name": "Manage the sensor data",
        "info": "",
        "x": 590,
        "y": 940,
        "wires": []
    },
    {
        "id": "c175e53e.538898",
        "type": "comment",
        "z": "b56598ed.0fee28",
        "name": "Send commands to board",
        "info": "These nodes are used to format the AT commands for board with STM32WB.\n\nInitialize board with ATZ\nSet Region\nSet SubRegion\nStart beacon\n\nThe command are sent to the flow UART A. (UART flows manage the connection, the data logic and result parsing)",
        "x": 1030,
        "y": 700,
        "wires": []
    },
    {
        "id": "ad5e67b4.44c7b8",
        "type": "comment",
        "z": "b56598ed.0fee28",
        "name": "Reset management",
        "info": "This nodes are used to reset the data when demo is started, and to initialize UI when dashboard is displayed the first time.\n\nThe Reset the UI function nodes uses a flag to track if UI has been intiialized.\n\nWhen the demo flow is started, the flag is deleted. When the Dashboard is displayed the first time the flag is set and UI is initialized to display the country selection page.\nIf dashboard was started before the flow, then flag is set when the start button is pressed.\n",
        "x": 970,
        "y": 400,
        "wires": []
    },
    {
        "id": "ae9f8ce.79aef7",
        "type": "comment",
        "z": "b56598ed.0fee28",
        "name": "Display the sensor ",
        "info": "When user has selected the coutnry, the concentrator is started and the sensor panels are displayed.\n\n2 nodes are used to display the panles :\n- one to hide the country selection group, and show the sensor list and sensors panels\n- a second one to collapse all sensors panels (they are empty at start)\n",
        "x": 1010,
        "y": 580,
        "wires": []
    },
    {
        "id": "2813c520.1fffaa",
        "type": "comment",
        "z": "b56598ed.0fee28",
        "name": "Data received on Serial port",
        "info": "",
        "x": 240,
        "y": 740,
        "wires": []
    },
    {
        "id": "796238b7.b6c5e8",
        "type": "comment",
        "z": "b56598ed.0fee28",
        "name": "Send data to sensor panels and table",
        "info": "The data decoded and formatted are sent :\n- to the table component \n- the sensor panels in charts flows",
        "x": 1130,
        "y": 980,
        "wires": []
    },
    {
        "id": "5167cc00.daca44",
        "type": "debug",
        "z": "b56598ed.0fee28",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 990,
        "y": 1460,
        "wires": []
    },
    {
        "id": "6efc51.d5cae3b",
        "type": "comment",
        "z": "b56598ed.0fee28",
        "name": "Finite State Machine",
        "info": "",
        "x": 510,
        "y": 580,
        "wires": []
    },
    {
        "id": "8c4bb7ba.f91318",
        "type": "function",
        "z": "b56598ed.0fee28",
        "name": "display new panel",
        "func": "\nvar UIConfig={\n    \"group\": {\n        \"show\": [\"STM32WL_Demo_Sensor_\"+msg.payload],\n    }\n}\n\n\n\nmsg.payload=UIConfig;\nreturn msg;\n    ",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 1080,
        "wires": [
            [
                "7e5a4021.e0b39"
            ]
        ]
    },
    {
        "id": "ad47be43.181f7",
        "type": "delay",
        "z": "b56598ed.0fee28",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1234,
        "y": 1195,
        "wires": [
            [
                "7e5a4021.e0b39"
            ]
        ]
    },
    {
        "id": "b7f4272e.3888c8",
        "type": "ui_button",
        "z": "b56598ed.0fee28",
        "name": "",
        "group": "b2debca7.ea722",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Counter reset",
        "tooltip": "Reset the packet count and PER",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 160,
        "y": 1300,
        "wires": [
            [
                "f559dbdf.df45a8"
            ]
        ]
    },
    {
        "id": "f559dbdf.df45a8",
        "type": "function",
        "z": "b56598ed.0fee28",
        "name": "reset counters",
        "func": "var sensorList = flow.get(\"sensorList\");\nif (sensorList===undefined ) {\n    sensorList=[];\n}\n\n\nsensorList.forEach(function(item,i,array){\n   item.received=0;\n   item.missed=0;\n   item.PER=0;\n   node.send ({topic:item.index,\n       tableData:{\n           PER:0,\n           received:0,\n           missed:0,\n           index:item.index\n       }\n   })\n});\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 1300,
        "wires": [
            [
                "500a276c.f10388"
            ]
        ]
    },
    {
        "id": "e680c4b.64fe538",
        "type": "ui_ui_control",
        "z": "b56598ed.0fee28",
        "name": "",
        "events": "all",
        "x": 1280,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "6833db71.3f6884",
        "type": "function",
        "z": "b56598ed.0fee28",
        "name": "close new panel",
        "func": "\nvar UIConfig={\n    \"group\": {\n        \"close\": [\"STM32WL_Demo_Sensor_\"+msg.payload]\n    }\n}\n\nmsg.payload=UIConfig;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1015,
        "y": 1179,
        "wires": [
            [
                "ad47be43.181f7"
            ]
        ]
    },
    {
        "id": "c4ba613f.b37ca",
        "type": "comment",
        "z": "b56598ed.0fee28",
        "name": "Display the new sensor panels",
        "info": "",
        "x": 1080,
        "y": 1040,
        "wires": []
    },
    {
        "id": "9258517f.f1f38",
        "type": "comment",
        "z": "b56598ed.0fee28",
        "name": "Home page / Region selection",
        "info": "",
        "x": 360,
        "y": 80,
        "wires": []
    },
    {
        "id": "53682a0b.c0fa04",
        "type": "comment",
        "z": "b56598ed.0fee28",
        "name": "Demo main part",
        "info": "",
        "x": 500,
        "y": 380,
        "wires": []
    },
    {
        "id": "defbd333.00d98",
        "type": "debug",
        "z": "b56598ed.0fee28",
        "name": "FSM state",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 700,
        "wires": []
    },
    {
        "id": "52651e58.8a348",
        "type": "debug",
        "z": "b56598ed.0fee28",
        "name": "FSM input",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 490,
        "y": 740,
        "wires": []
    },
    {
        "id": "13f5413f.c39ebf",
        "type": "change",
        "z": "b56598ed.0fee28",
        "name": "Close Serial log",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"close\":[\"STM32WL_Demo_Serial_log\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 660,
        "wires": [
            [
                "514f3822.6d3fc8"
            ]
        ]
    },
    {
        "id": "514f3822.6d3fc8",
        "type": "delay",
        "z": "b56598ed.0fee28",
        "name": "Delay",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 1150,
        "y": 660,
        "wires": [
            [
                "bb7cf606.6f5108"
            ]
        ]
    },
    {
        "id": "a9f36111.1e765",
        "type": "function",
        "z": "b56598ed.0fee28",
        "name": "remove lost eui",
        "func": "var euiList = global.get(\"euiList\");\nvar sensorList = flow.get(\"sensorList\");\n\nvar data= msg.payload.split(\"=\");\nlet eui = data[1];\n        \nlet index = euiList.indexOf(eui);\n\nif (index >=0 ) {\n   euiList.splice(index, 1);\n}\n\n// search the sensor in the list\nsensorList.forEach(function(item,i,array){\n   if (item.eui==eui) {\n       sensorList[i].lost=true;\n       msg.payload=i;\n   }\n});\n\nmsg.options = euiList;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 498.5,
        "y": 1212,
        "wires": [
            [
                "4b98c3b4.c93b8c",
                "6833db71.3f6884",
                "a71abfc6.f88d6"
            ]
        ]
    },
    {
        "id": "4b98c3b4.c93b8c",
        "type": "function",
        "z": "b56598ed.0fee28",
        "name": "Hide lost panel",
        "func": "var UIConfig={\n    \"group\": {\n        \"hide\": [\"STM32WL_Demo_Sensor_\"+msg.payload]\n    }\n}\n\nmsg.payload=UIConfig;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1014.5,
        "y": 1218,
        "wires": [
            [
                "ad47be43.181f7"
            ]
        ]
    },
    {
        "id": "60b8eee8.8186c",
        "type": "function",
        "z": "b56598ed.0fee28",
        "name": "add eui",
        "func": "var euiList = global.get(\"euiList\");\nvar sensorList = flow.get(\"sensorList\");\n\nif (euiList===undefined) {\n    euiList = [];\n    global.set(\"euiList\", euiList);\n}\n\nlet eui = sensorList[msg.payload].eui;\neuiList.push(eui);\n\nmsg.options = euiList;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 997.5,
        "y": 1132,
        "wires": [
            [
                "a71abfc6.f88d6"
            ]
        ]
    },
    {
        "id": "a71abfc6.f88d6",
        "type": "link out",
        "z": "b56598ed.0fee28",
        "name": "",
        "links": [
            "b6cbe5e5.004c88"
        ],
        "x": 1202.5,
        "y": 1125,
        "wires": []
    },
    {
        "id": "102e566e.04b33a",
        "type": "change",
        "z": "b56598ed.0fee28",
        "name": "reset",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "control",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 640,
        "wires": [
            [
                "54e7683a.ac7648"
            ]
        ]
    },
    {
        "id": "20a1348c.cb365c",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "voltage",
        "group": "18848a5.a3bdb76",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "2",
        "max": "3.5",
        "colors": [
            "#b50000",
            "#e6e600",
            "#02ff22"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 735,
        "y": 71,
        "wires": []
    },
    {
        "id": "6c6c1d00.10c7d4",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "18848a5.a3bdb76",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Sensor eui",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 747,
        "y": 28,
        "wires": []
    },
    {
        "id": "dceb25d9.f47f88",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "36f009b.e058af6",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Sensor eui",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 741,
        "y": 257,
        "wires": []
    },
    {
        "id": "571a61b3.c7638",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "5cf86100.5fd8",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Sensor eui",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 740,
        "y": 485,
        "wires": []
    },
    {
        "id": "4c181663.4e0498",
        "type": "link in",
        "z": "88971af9.c4b578",
        "name": "sensor data",
        "links": [
            "b95a592d.895b98",
            "b2d51966.2c5528",
            "bc171374.1c95d",
            "b7886fe7.1dfc"
        ],
        "x": 75,
        "y": 1460,
        "wires": [
            [
                "7b334dea.616f44",
                "6a26e3cc.ee757c",
                "c0c9f9b3.f6f258",
                "75e0498c.c46218",
                "3b61f11d.54d55e",
                "28466cce.679fb4",
                "aeaaadbf.77dbf",
                "d22e5bc1.6cedb8",
                "68801f2d.6694d",
                "9dfcb9e0.e4cce8",
                "c5d76e98.dc606",
                "17dfe9dc.bfc9f6",
                "71d31f1.3829fe",
                "ce8057bb.b36c68",
                "8e9b8fac.28c"
            ]
        ]
    },
    {
        "id": "7b334dea.616f44",
        "type": "subflow:d3f1f54f.32ba68",
        "z": "88971af9.c4b578",
        "name": "",
        "env": [],
        "x": 469,
        "y": 132,
        "wires": [
            [
                "6c6c1d00.10c7d4"
            ],
            [
                "36a7f5cac4eb8468"
            ],
            [],
            [
                "20a1348c.cb365c"
            ],
            [],
            [
                "ba88b9775dd70d6c"
            ],
            [
                "c280ac69fa95655e"
            ],
            [
                "af425fa31d0fe89d"
            ],
            [
                "12165b240a4466b1"
            ],
            [],
            [
                "e984637fb180e833"
            ],
            [],
            [
                "46eb257c34cc6f4b"
            ],
            [
                "11bb19c663462a6a"
            ],
            []
        ]
    },
    {
        "id": "6a26e3cc.ee757c",
        "type": "subflow:d3f1f54f.32ba68",
        "z": "88971af9.c4b578",
        "name": "",
        "env": [
            {
                "name": "sensor",
                "value": "1",
                "type": "num"
            }
        ],
        "x": 470,
        "y": 359,
        "wires": [
            [
                "dceb25d9.f47f88"
            ],
            [
                "e934cb9563d25f7f"
            ],
            [],
            [
                "e251f4420ba3a753"
            ],
            [],
            [
                "942153873b21057d"
            ],
            [
                "63bd9dc3fd858a59"
            ],
            [
                "eb844c608fd74fcb"
            ],
            [
                "19af1b6c30013488"
            ],
            [],
            [
                "cd7e0e81cfed57ee"
            ],
            [],
            [
                "08a2e8e4a14b1bf5"
            ],
            [
                "ccf894876a97fdf9"
            ],
            []
        ]
    },
    {
        "id": "c0c9f9b3.f6f258",
        "type": "subflow:d3f1f54f.32ba68",
        "z": "88971af9.c4b578",
        "name": "",
        "env": [
            {
                "name": "sensor",
                "value": "2",
                "type": "num"
            }
        ],
        "x": 470,
        "y": 587,
        "wires": [
            [
                "571a61b3.c7638"
            ],
            [
                "d459063a883b2acd"
            ],
            [],
            [
                "c162419a10c3ee9a"
            ],
            [],
            [
                "fca0919180b332a0"
            ],
            [
                "67f0323d28a0052a"
            ],
            [
                "97f8e06fcf69383f"
            ],
            [
                "d54f87b38a307732"
            ],
            [],
            [
                "b58c3bcf378ee07c"
            ],
            [],
            [
                "07d98e5a3bbd734a"
            ],
            [
                "becc02c0f860fee3"
            ],
            []
        ]
    },
    {
        "id": "75e0498c.c46218",
        "type": "subflow:d3f1f54f.32ba68",
        "z": "88971af9.c4b578",
        "name": "",
        "env": [
            {
                "name": "sensor",
                "value": "3",
                "type": "num"
            }
        ],
        "x": 471,
        "y": 815,
        "wires": [
            [
                "e0bc1d2ca2e34307"
            ],
            [
                "4023f5f46bf9a8e6"
            ],
            [],
            [
                "95e8b0acf40eaa08"
            ],
            [],
            [
                "816d375a820d8171"
            ],
            [
                "6e222d866a90d798"
            ],
            [
                "f55b7df304534a48"
            ],
            [
                "7de24251bcc6800b"
            ],
            [],
            [
                "f08b2ecbf1391375"
            ],
            [],
            [
                "92e2ec39e802c47a"
            ],
            [
                "48cf63bedd2e52f7"
            ],
            []
        ]
    },
    {
        "id": "3b61f11d.54d55e",
        "type": "subflow:d3f1f54f.32ba68",
        "z": "88971af9.c4b578",
        "name": "",
        "env": [
            {
                "name": "sensor",
                "value": "4",
                "type": "num"
            }
        ],
        "x": 472,
        "y": 1046,
        "wires": [
            [
                "3fe4cef51cbfc64b"
            ],
            [
                "62c1e8db856031ae"
            ],
            [],
            [
                "dbad7452f855886a"
            ],
            [],
            [
                "61a62f4b5705b0d0"
            ],
            [
                "10ca5a8ac289c611"
            ],
            [
                "c4b4df97450758d9"
            ],
            [
                "c34b44f4bc793664"
            ],
            [],
            [
                "622b95c6256032f7"
            ],
            [],
            [
                "c6ad393c3f3ef249"
            ],
            [
                "4083d001f87c9b0f"
            ],
            []
        ]
    },
    {
        "id": "28466cce.679fb4",
        "type": "subflow:d3f1f54f.32ba68",
        "z": "88971af9.c4b578",
        "name": "",
        "env": [
            {
                "name": "sensor",
                "value": "5",
                "type": "num"
            }
        ],
        "x": 471,
        "y": 1275,
        "wires": [
            [
                "c171ce12bea3d91e"
            ],
            [
                "fb282de15416dc76"
            ],
            [],
            [
                "d80ead14c29b50ef"
            ],
            [],
            [
                "db5ff15db32ea8e8"
            ],
            [
                "e8b0c4359016e770"
            ],
            [
                "1c041d628d4dc817"
            ],
            [
                "dff0fe60f38653a6"
            ],
            [],
            [
                "82cdea23d4dc2244"
            ],
            [],
            [
                "871d8e53e790201d"
            ],
            [
                "23e32361079e8d78"
            ],
            []
        ]
    },
    {
        "id": "bfc1e35a.0d2c4",
        "type": "comment",
        "z": "88971af9.c4b578",
        "name": "Sensor 5 panel",
        "info": "",
        "x": 477,
        "y": 1301,
        "wires": []
    },
    {
        "id": "95076205.6c459",
        "type": "comment",
        "z": "88971af9.c4b578",
        "name": "Sensor 4 panel",
        "info": "",
        "x": 473,
        "y": 1070,
        "wires": []
    },
    {
        "id": "e9172f87.ba6",
        "type": "comment",
        "z": "88971af9.c4b578",
        "name": "Sensor 3 panel",
        "info": "",
        "x": 472,
        "y": 841,
        "wires": []
    },
    {
        "id": "b7dae797.dd4d58",
        "type": "comment",
        "z": "88971af9.c4b578",
        "name": "Sensor 2 panel",
        "info": "",
        "x": 474,
        "y": 612,
        "wires": []
    },
    {
        "id": "315342e0.0bf7be",
        "type": "comment",
        "z": "88971af9.c4b578",
        "name": "Sensor 1 panel",
        "info": "",
        "x": 472,
        "y": 385,
        "wires": []
    },
    {
        "id": "7b293ffb.c68ab",
        "type": "comment",
        "z": "88971af9.c4b578",
        "name": "Sensor 0 panel",
        "info": "",
        "x": 469,
        "y": 159,
        "wires": []
    },
    {
        "id": "aeaaadbf.77dbf",
        "type": "subflow:d3f1f54f.32ba68",
        "z": "88971af9.c4b578",
        "name": "",
        "env": [
            {
                "name": "sensor",
                "value": "6",
                "type": "num"
            }
        ],
        "x": 470,
        "y": 1503,
        "wires": [
            [
                "5d3b92e8c774a146"
            ],
            [
                "a1021cc38a6c2589"
            ],
            [],
            [
                "c63522eedcc9693d"
            ],
            [],
            [
                "f69ab69afd93501a"
            ],
            [
                "d85e67471b8bf15a"
            ],
            [
                "ed83c25b922dcd63"
            ],
            [
                "12bf5924b4f750ec"
            ],
            [],
            [
                "923b4153209a81b6"
            ],
            [],
            [
                "378a5520b58230fd"
            ],
            [
                "4d4271416ba4cdfb"
            ],
            []
        ]
    },
    {
        "id": "8d245850.f8c268",
        "type": "comment",
        "z": "88971af9.c4b578",
        "name": "Sensor 6 panel",
        "info": "",
        "x": 474,
        "y": 1526,
        "wires": []
    },
    {
        "id": "d22e5bc1.6cedb8",
        "type": "subflow:d3f1f54f.32ba68",
        "z": "88971af9.c4b578",
        "name": "",
        "env": [
            {
                "name": "sensor",
                "value": "7",
                "type": "num"
            }
        ],
        "x": 470,
        "y": 1733,
        "wires": [
            [
                "4ff5067a890f96ae"
            ],
            [
                "17b8cc3e21ec1572"
            ],
            [],
            [
                "03b29647bde55239"
            ],
            [],
            [
                "bbd097d03bf84d36"
            ],
            [
                "b8c26ae294db42ad"
            ],
            [
                "e902df84401370b2"
            ],
            [
                "4ec08d6213deb62e"
            ],
            [],
            [
                "bbc21941459b78c9"
            ],
            [],
            [
                "7cab30d86baf5dfd"
            ],
            [
                "73416f7917ad63f1"
            ],
            []
        ]
    },
    {
        "id": "3038e237.76412e",
        "type": "comment",
        "z": "88971af9.c4b578",
        "name": "Sensor 7 panel",
        "info": "",
        "x": 467,
        "y": 1761,
        "wires": []
    },
    {
        "id": "68801f2d.6694d",
        "type": "subflow:d3f1f54f.32ba68",
        "z": "88971af9.c4b578",
        "name": "",
        "env": [
            {
                "name": "sensor",
                "value": "8",
                "type": "num"
            }
        ],
        "x": 472,
        "y": 1962,
        "wires": [
            [
                "b1d2fafe8d9d5b56"
            ],
            [
                "abbf6f7876dc489b"
            ],
            [],
            [
                "b0e894a3b359cdbb"
            ],
            [],
            [
                "9420478f200eb938"
            ],
            [
                "d4f502006ad05184"
            ],
            [
                "d1d25b1ba2944449"
            ],
            [
                "ddd260671be2692d"
            ],
            [],
            [
                "6dc44c527a722e1b"
            ],
            [],
            [
                "a93e8ec3d68b16cd"
            ],
            [
                "1a03f49d67c7cc87"
            ],
            []
        ]
    },
    {
        "id": "c33e6ee6.3972e",
        "type": "comment",
        "z": "88971af9.c4b578",
        "name": "Sensor 8 panel",
        "info": "",
        "x": 467,
        "y": 1990,
        "wires": []
    },
    {
        "id": "9dfcb9e0.e4cce8",
        "type": "subflow:d3f1f54f.32ba68",
        "z": "88971af9.c4b578",
        "name": "",
        "env": [
            {
                "name": "sensor",
                "value": "9",
                "type": "num"
            }
        ],
        "x": 473,
        "y": 2190,
        "wires": [
            [
                "27bb25e8930e5815"
            ],
            [
                "b463bc515e037b47"
            ],
            [],
            [
                "b4f81cac043afb44"
            ],
            [],
            [
                "aa67371a257fe5d6"
            ],
            [
                "4c09ddaf3b5cb557"
            ],
            [
                "a21fcaf90038697f"
            ],
            [
                "ce64c5e50c68b31b"
            ],
            [],
            [
                "6c0699b30e013b80"
            ],
            [],
            [
                "0882966569ea2cea"
            ],
            [
                "16197c56629653e5"
            ],
            []
        ]
    },
    {
        "id": "7e8258da.a0e0a8",
        "type": "comment",
        "z": "88971af9.c4b578",
        "name": "Sensor 9 panel",
        "info": "",
        "x": 473,
        "y": 2217,
        "wires": []
    },
    {
        "id": "c5d76e98.dc606",
        "type": "subflow:d3f1f54f.32ba68",
        "z": "88971af9.c4b578",
        "name": "",
        "env": [
            {
                "name": "sensor",
                "value": "10",
                "type": "num"
            }
        ],
        "x": 473,
        "y": 2419,
        "wires": [
            [
                "79fdb89d547f72f4"
            ],
            [
                "2d10010fa97e5a72"
            ],
            [],
            [
                "cf983801117f8f8b"
            ],
            [],
            [
                "22a26118db3f88c9"
            ],
            [
                "ca92ac317ba263fc"
            ],
            [
                "99791a7bb14dd6fa"
            ],
            [
                "9454c3142892d699"
            ],
            [],
            [
                "cbc097cebdf4c6b2"
            ],
            [],
            [
                "e07aa611c77d3fbf"
            ],
            [
                "ae9a48da64a52526"
            ],
            []
        ]
    },
    {
        "id": "699e63c7.a084ac",
        "type": "comment",
        "z": "88971af9.c4b578",
        "name": "Sensor 10 panel",
        "info": "",
        "x": 476,
        "y": 2450,
        "wires": []
    },
    {
        "id": "17dfe9dc.bfc9f6",
        "type": "subflow:d3f1f54f.32ba68",
        "z": "88971af9.c4b578",
        "name": "",
        "env": [
            {
                "name": "sensor",
                "value": "11",
                "type": "num"
            }
        ],
        "x": 473,
        "y": 2648,
        "wires": [
            [
                "cc50f417620650d4"
            ],
            [
                "8246acd7ce027b7c"
            ],
            [],
            [
                "02702e3956837784"
            ],
            [],
            [
                "b80de1e4802ff8b2"
            ],
            [
                "e9ccc89c55dcef0f"
            ],
            [
                "50afbd28b72bf739"
            ],
            [
                "6a30f995025e7997"
            ],
            [],
            [
                "afbc1bd8ed4fecc0"
            ],
            [],
            [
                "686f9dbcb62a48e9"
            ],
            [
                "7d5ed9350b4447cc"
            ],
            []
        ]
    },
    {
        "id": "e31ea865.2fb9f8",
        "type": "comment",
        "z": "88971af9.c4b578",
        "name": "Sensor 11 panel",
        "info": "",
        "x": 472,
        "y": 2676,
        "wires": []
    },
    {
        "id": "71d31f1.3829fe",
        "type": "subflow:d3f1f54f.32ba68",
        "z": "88971af9.c4b578",
        "name": "",
        "env": [
            {
                "name": "sensor",
                "value": "12",
                "type": "num"
            }
        ],
        "x": 474,
        "y": 2877,
        "wires": [
            [
                "1ea58c68e20bf5cf"
            ],
            [
                "0a6c17a422229568"
            ],
            [],
            [
                "96926e52bdce334e"
            ],
            [],
            [
                "a3925292166968a2"
            ],
            [
                "f12ef8bf45067d4d"
            ],
            [
                "8cd07e228939ba50"
            ],
            [
                "27dde64565c2081a"
            ],
            [],
            [
                "47fba729bd466272"
            ],
            [],
            [
                "c5b45fdc5bdada56"
            ],
            [
                "39b0f20af24201ec"
            ],
            []
        ]
    },
    {
        "id": "b4d8069d.6638e8",
        "type": "comment",
        "z": "88971af9.c4b578",
        "name": "Sensor 12 panel",
        "info": "",
        "x": 476,
        "y": 2901,
        "wires": []
    },
    {
        "id": "ce8057bb.b36c68",
        "type": "subflow:d3f1f54f.32ba68",
        "z": "88971af9.c4b578",
        "name": "",
        "env": [
            {
                "name": "sensor",
                "value": "13",
                "type": "num"
            }
        ],
        "x": 474,
        "y": 3104,
        "wires": [
            [
                "a0aaa8b2c7593fdc"
            ],
            [
                "14a45c6434b20107"
            ],
            [],
            [
                "852b06bf9e83f629"
            ],
            [],
            [
                "6368689bad1bef7d"
            ],
            [
                "584495a36310031b"
            ],
            [
                "17ae790a5242fa89"
            ],
            [
                "b04c90b70fc5013f"
            ],
            [],
            [
                "e88c7cfae6380308"
            ],
            [],
            [
                "178476a218e149b2"
            ],
            [
                "72cce629546393e8"
            ],
            []
        ]
    },
    {
        "id": "df0dd05f.62e7c",
        "type": "comment",
        "z": "88971af9.c4b578",
        "name": "Sensor 13 panel",
        "info": "",
        "x": 473,
        "y": 3129,
        "wires": []
    },
    {
        "id": "8e9b8fac.28c",
        "type": "subflow:d3f1f54f.32ba68",
        "z": "88971af9.c4b578",
        "name": "",
        "env": [
            {
                "name": "sensor",
                "value": "14",
                "type": "num"
            }
        ],
        "x": 475,
        "y": 3332,
        "wires": [
            [
                "3bec0c43baa2aa0e"
            ],
            [
                "4fb1adbd2e98f1fb"
            ],
            [],
            [
                "ac3a88cb4b986283"
            ],
            [],
            [
                "13b86e6fcc94b302"
            ],
            [
                "3b752fb66e1dc6d2"
            ],
            [
                "b9883d4ddbad9beb"
            ],
            [
                "e87634aa06ad4291"
            ],
            [],
            [
                "18ea1c2683641868"
            ],
            [],
            [
                "1a266268dd4bcf15"
            ],
            [
                "bd05ee2ef2c8fa5c"
            ],
            []
        ]
    },
    {
        "id": "a2736e0b.ff0f4",
        "type": "comment",
        "z": "88971af9.c4b578",
        "name": "Sensor 14 panel",
        "info": "",
        "x": 474,
        "y": 3361,
        "wires": []
    },
    {
        "id": "af425fa31d0fe89d",
        "type": "function",
        "z": "88971af9.c4b578",
        "name": "",
        "func": "\nif (msg.payload !== undefined)\n{\n    var data = msg.payload.split(\":\");\n    msg.payload= {\n        x : parseInt(data[2]),   \n        y : parseInt(data[1]),  \n        z : parseInt(data[0])\n        \n    };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170.5,
        "y": 130,
        "wires": [
            [
                "96dda1510b594b48"
            ]
        ]
    },
    {
        "id": "ba88b9775dd70d6c",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "18848a5.a3bdb76",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "missed",
        "label": "Missed packet",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1019.5,
        "y": 80,
        "wires": []
    },
    {
        "id": "36a7f5cac4eb8468",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "temperature",
        "group": "18848a5.a3bdb76",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature",
        "label": "deg",
        "format": "{{value}}",
        "min": "-30",
        "max": "50",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 940.5,
        "y": 47,
        "wires": []
    },
    {
        "id": "c280ac69fa95655e",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "pressure",
        "group": "18848a5.a3bdb76",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": "870",
        "max": "1090",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 925.5,
        "y": 111,
        "wires": []
    },
    {
        "id": "e984637fb180e833",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "18848a5.a3bdb76",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "step_count",
        "label": "Step count",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 738.5,
        "y": 171,
        "wires": []
    },
    {
        "id": "55afbf1523bb43a3",
        "type": "ui_chart",
        "z": "88971af9.c4b578",
        "name": "acceleration",
        "group": "18848a5.a3bdb76",
        "order": 4,
        "width": 4,
        "height": 3,
        "label": "Acceleration (g)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f38e1b",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1401.5,
        "y": 207,
        "wires": [
            []
        ]
    },
    {
        "id": "46eb257c34cc6f4b",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "avg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1184.5,
        "y": 190,
        "wires": [
            [
                "55afbf1523bb43a3"
            ]
        ]
    },
    {
        "id": "11bb19c663462a6a",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "max",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1186,
        "y": 224,
        "wires": [
            [
                "55afbf1523bb43a3"
            ]
        ]
    },
    {
        "id": "eb844c608fd74fcb",
        "type": "function",
        "z": "88971af9.c4b578",
        "name": "",
        "func": "\nif (msg.payload !== undefined)\n{\n    var data = msg.payload.split(\":\");\n    msg.payload= {\n        x : parseInt(data[2]),   \n        y : parseInt(data[1]),  \n        z : parseInt(data[0])\n        \n    };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1184,
        "y": 365,
        "wires": [
            [
                "298a15aa269342cc"
            ]
        ]
    },
    {
        "id": "942153873b21057d",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "36f009b.e058af6",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "missed",
        "label": "Missed packet",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1019,
        "y": 309,
        "wires": []
    },
    {
        "id": "e934cb9563d25f7f",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "temperature",
        "group": "36f009b.e058af6",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature",
        "label": "deg",
        "format": "{{value}}",
        "min": "-30",
        "max": "50",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 934,
        "y": 275,
        "wires": []
    },
    {
        "id": "63bd9dc3fd858a59",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "pressure",
        "group": "36f009b.e058af6",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": "870",
        "max": "1090",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 923,
        "y": 344,
        "wires": []
    },
    {
        "id": "cd7e0e81cfed57ee",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "36f009b.e058af6",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "step_count",
        "label": "Step count",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 760,
        "y": 401,
        "wires": []
    },
    {
        "id": "aa0e791a680f5fbe",
        "type": "ui_chart",
        "z": "88971af9.c4b578",
        "name": "acceleration",
        "group": "36f009b.e058af6",
        "order": 4,
        "width": 4,
        "height": 3,
        "label": "Acceleration (g)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f38e1b",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1398,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "08a2e8e4a14b1bf5",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "avg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1183,
        "y": 421,
        "wires": [
            [
                "aa0e791a680f5fbe"
            ]
        ]
    },
    {
        "id": "ccf894876a97fdf9",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "max",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180.5,
        "y": 455,
        "wires": [
            [
                "aa0e791a680f5fbe"
            ]
        ]
    },
    {
        "id": "e251f4420ba3a753",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "voltage",
        "group": "36f009b.e058af6",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "2",
        "max": "3.5",
        "colors": [
            "#b50000",
            "#e6e600",
            "#02ff22"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 728.5,
        "y": 298,
        "wires": []
    },
    {
        "id": "b58c3bcf378ee07c",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "5cf86100.5fd8",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "step_count",
        "label": "Step count",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 761,
        "y": 627,
        "wires": []
    },
    {
        "id": "97f8e06fcf69383f",
        "type": "function",
        "z": "88971af9.c4b578",
        "name": "",
        "func": "\nif (msg.payload !== undefined)\n{\n    var data = msg.payload.split(\":\");\n    msg.payload= {\n        x : parseInt(data[2]),   \n        y : parseInt(data[1]),  \n        z : parseInt(data[0])\n        \n    };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1185,
        "y": 591,
        "wires": [
            [
                "62e5bfa1dc492b94"
            ]
        ]
    },
    {
        "id": "67f0323d28a0052a",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "pressure",
        "group": "5cf86100.5fd8",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": "870",
        "max": "1090",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 924,
        "y": 570,
        "wires": []
    },
    {
        "id": "fca0919180b332a0",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "5cf86100.5fd8",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "missed",
        "label": "Missed packet",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1020,
        "y": 535,
        "wires": []
    },
    {
        "id": "d459063a883b2acd",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "temperature",
        "group": "5cf86100.5fd8",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature",
        "label": "deg",
        "format": "{{value}}",
        "min": "-30",
        "max": "50",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 935,
        "y": 501,
        "wires": []
    },
    {
        "id": "c162419a10c3ee9a",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "voltage",
        "group": "5cf86100.5fd8",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "2",
        "max": "3.5",
        "colors": [
            "#b50000",
            "#e6e600",
            "#02ff22"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 729.5,
        "y": 524,
        "wires": []
    },
    {
        "id": "07d98e5a3bbd734a",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "avg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1184,
        "y": 647,
        "wires": [
            [
                "721ada702b2f5b66"
            ]
        ]
    },
    {
        "id": "becc02c0f860fee3",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "max",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1181.5,
        "y": 681,
        "wires": [
            [
                "721ada702b2f5b66"
            ]
        ]
    },
    {
        "id": "721ada702b2f5b66",
        "type": "ui_chart",
        "z": "88971af9.c4b578",
        "name": "acceleration",
        "group": "5cf86100.5fd8",
        "order": 4,
        "width": 4,
        "height": 3,
        "label": "Acceleration (g)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f38e1b",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1399,
        "y": 666,
        "wires": [
            []
        ]
    },
    {
        "id": "e0bc1d2ca2e34307",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "9142e5f0.a71698",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Sensor eui",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 750,
        "y": 711,
        "wires": []
    },
    {
        "id": "f08b2ecbf1391375",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "9142e5f0.a71698",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "step_count",
        "label": "Step count",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 771,
        "y": 853,
        "wires": []
    },
    {
        "id": "f55b7df304534a48",
        "type": "function",
        "z": "88971af9.c4b578",
        "name": "",
        "func": "\nif (msg.payload !== undefined)\n{\n    var data = msg.payload.split(\":\");\n    msg.payload= {\n        x : parseInt(data[2]),   \n        y : parseInt(data[1]),  \n        z : parseInt(data[0])\n        \n    };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1195,
        "y": 817,
        "wires": [
            [
                "62a6bbbcae157d86"
            ]
        ]
    },
    {
        "id": "6e222d866a90d798",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "pressure",
        "group": "9142e5f0.a71698",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": "870",
        "max": "1090",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 934,
        "y": 796,
        "wires": []
    },
    {
        "id": "816d375a820d8171",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "9142e5f0.a71698",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "missed",
        "label": "Missed packet",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1030,
        "y": 761,
        "wires": []
    },
    {
        "id": "4023f5f46bf9a8e6",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "temperature",
        "group": "9142e5f0.a71698",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature",
        "label": "deg",
        "format": "{{value}}",
        "min": "-30",
        "max": "50",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 945,
        "y": 727,
        "wires": []
    },
    {
        "id": "95e8b0acf40eaa08",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "voltage",
        "group": "9142e5f0.a71698",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "2",
        "max": "3.5",
        "colors": [
            "#b50000",
            "#e6e600",
            "#02ff22"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 739.5,
        "y": 750,
        "wires": []
    },
    {
        "id": "92e2ec39e802c47a",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "avg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1194,
        "y": 873,
        "wires": [
            [
                "2d1223bb5288b6ab"
            ]
        ]
    },
    {
        "id": "48cf63bedd2e52f7",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "max",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1191.5,
        "y": 907,
        "wires": [
            [
                "2d1223bb5288b6ab"
            ]
        ]
    },
    {
        "id": "2d1223bb5288b6ab",
        "type": "ui_chart",
        "z": "88971af9.c4b578",
        "name": "acceleration",
        "group": "9142e5f0.a71698",
        "order": 4,
        "width": 4,
        "height": 3,
        "label": "Acceleration (g)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f38e1b",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1409,
        "y": 892,
        "wires": [
            []
        ]
    },
    {
        "id": "3fe4cef51cbfc64b",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "de77cfaf.cfb3d",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Sensor eui",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 754,
        "y": 939,
        "wires": []
    },
    {
        "id": "622b95c6256032f7",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "de77cfaf.cfb3d",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "step_count",
        "label": "Step count",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 775,
        "y": 1081,
        "wires": []
    },
    {
        "id": "c4b4df97450758d9",
        "type": "function",
        "z": "88971af9.c4b578",
        "name": "",
        "func": "\nif (msg.payload !== undefined)\n{\n    var data = msg.payload.split(\":\");\n    msg.payload= {\n        x : parseInt(data[2]),   \n        y : parseInt(data[1]),  \n        z : parseInt(data[0])\n        \n    };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1199,
        "y": 1045,
        "wires": [
            [
                "ccd2a83e92e6bb86"
            ]
        ]
    },
    {
        "id": "10ca5a8ac289c611",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "pressure",
        "group": "de77cfaf.cfb3d",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": "870",
        "max": "1090",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 934,
        "y": 1023,
        "wires": []
    },
    {
        "id": "61a62f4b5705b0d0",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "de77cfaf.cfb3d",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "missed",
        "label": "Missed packet",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1034,
        "y": 989,
        "wires": []
    },
    {
        "id": "62c1e8db856031ae",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "temperature",
        "group": "de77cfaf.cfb3d",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature",
        "label": "deg",
        "format": "{{value}}",
        "min": "-30",
        "max": "50",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 949,
        "y": 955,
        "wires": []
    },
    {
        "id": "dbad7452f855886a",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "voltage",
        "group": "de77cfaf.cfb3d",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "2",
        "max": "3.5",
        "colors": [
            "#b50000",
            "#e6e600",
            "#02ff22"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 743.5,
        "y": 978,
        "wires": []
    },
    {
        "id": "c6ad393c3f3ef249",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "avg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1198,
        "y": 1101,
        "wires": [
            [
                "7e0d73b99bcb32d6"
            ]
        ]
    },
    {
        "id": "4083d001f87c9b0f",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "max",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1195.5,
        "y": 1135,
        "wires": [
            [
                "7e0d73b99bcb32d6"
            ]
        ]
    },
    {
        "id": "7e0d73b99bcb32d6",
        "type": "ui_chart",
        "z": "88971af9.c4b578",
        "name": "acceleration",
        "group": "de77cfaf.cfb3d",
        "order": 4,
        "width": 4,
        "height": 3,
        "label": "Acceleration (g)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f38e1b",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1413,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "c171ce12bea3d91e",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "cc6b0d90.1c354",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Sensor eui",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 764,
        "y": 1184,
        "wires": []
    },
    {
        "id": "82cdea23d4dc2244",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "cc6b0d90.1c354",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "step_count",
        "label": "Step count",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 785,
        "y": 1326,
        "wires": []
    },
    {
        "id": "1c041d628d4dc817",
        "type": "function",
        "z": "88971af9.c4b578",
        "name": "",
        "func": "\nif (msg.payload !== undefined)\n{\n    var data = msg.payload.split(\":\");\n    msg.payload= {\n        x : parseInt(data[2]),   \n        y : parseInt(data[1]),  \n        z : parseInt(data[0])\n        \n    };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1209,
        "y": 1290,
        "wires": [
            [
                "664efb36bbe72651"
            ]
        ]
    },
    {
        "id": "e8b0c4359016e770",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "pressure",
        "group": "cc6b0d90.1c354",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": "870",
        "max": "1090",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 948,
        "y": 1269,
        "wires": []
    },
    {
        "id": "db5ff15db32ea8e8",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "cc6b0d90.1c354",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "missed",
        "label": "Missed packet",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1044,
        "y": 1234,
        "wires": []
    },
    {
        "id": "fb282de15416dc76",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "temperature",
        "group": "cc6b0d90.1c354",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature",
        "label": "deg",
        "format": "{{value}}",
        "min": "-30",
        "max": "50",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 959,
        "y": 1200,
        "wires": []
    },
    {
        "id": "d80ead14c29b50ef",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "voltage",
        "group": "cc6b0d90.1c354",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "2",
        "max": "3.5",
        "colors": [
            "#b50000",
            "#e6e600",
            "#02ff22"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 753.5,
        "y": 1223,
        "wires": []
    },
    {
        "id": "871d8e53e790201d",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "avg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1208,
        "y": 1346,
        "wires": [
            [
                "98646cea2e2752bb"
            ]
        ]
    },
    {
        "id": "23e32361079e8d78",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "max",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1205.5,
        "y": 1380,
        "wires": [
            [
                "98646cea2e2752bb"
            ]
        ]
    },
    {
        "id": "98646cea2e2752bb",
        "type": "ui_chart",
        "z": "88971af9.c4b578",
        "name": "acceleration",
        "group": "cc6b0d90.1c354",
        "order": 4,
        "width": 4,
        "height": 3,
        "label": "Acceleration (g)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f38e1b",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1423,
        "y": 1365,
        "wires": [
            []
        ]
    },
    {
        "id": "5d3b92e8c774a146",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "2b4810e4.a7abc",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Sensor eui",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 768,
        "y": 1402,
        "wires": []
    },
    {
        "id": "923b4153209a81b6",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "2b4810e4.a7abc",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "step_count",
        "label": "Step count",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 789,
        "y": 1544,
        "wires": []
    },
    {
        "id": "ed83c25b922dcd63",
        "type": "function",
        "z": "88971af9.c4b578",
        "name": "",
        "func": "\nif (msg.payload !== undefined)\n{\n    var data = msg.payload.split(\":\");\n    msg.payload= {\n        x : parseInt(data[2]),   \n        y : parseInt(data[1]),  \n        z : parseInt(data[0])\n        \n    };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1213,
        "y": 1508,
        "wires": [
            [
                "45a30e14634134c0"
            ]
        ]
    },
    {
        "id": "d85e67471b8bf15a",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "pressure",
        "group": "2b4810e4.a7abc",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": "870",
        "max": "1090",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 952,
        "y": 1487,
        "wires": []
    },
    {
        "id": "f69ab69afd93501a",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "2b4810e4.a7abc",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "missed",
        "label": "Missed packet",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1048,
        "y": 1452,
        "wires": []
    },
    {
        "id": "a1021cc38a6c2589",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "temperature",
        "group": "2b4810e4.a7abc",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature",
        "label": "deg",
        "format": "{{value}}",
        "min": "-30",
        "max": "50",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 963,
        "y": 1418,
        "wires": []
    },
    {
        "id": "c63522eedcc9693d",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "voltage",
        "group": "2b4810e4.a7abc",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "2",
        "max": "3.5",
        "colors": [
            "#b50000",
            "#e6e600",
            "#02ff22"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 757.5,
        "y": 1441,
        "wires": []
    },
    {
        "id": "378a5520b58230fd",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "avg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1212,
        "y": 1564,
        "wires": [
            [
                "139f188d545c71cf"
            ]
        ]
    },
    {
        "id": "4d4271416ba4cdfb",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "max",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1209.5,
        "y": 1598,
        "wires": [
            [
                "139f188d545c71cf"
            ]
        ]
    },
    {
        "id": "139f188d545c71cf",
        "type": "ui_chart",
        "z": "88971af9.c4b578",
        "name": "acceleration",
        "group": "2b4810e4.a7abc",
        "order": 4,
        "width": 4,
        "height": 3,
        "label": "Acceleration (g)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f38e1b",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1427,
        "y": 1583,
        "wires": [
            []
        ]
    },
    {
        "id": "4ff5067a890f96ae",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "f272d8bc.1f1258",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Sensor eui",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 766,
        "y": 1624,
        "wires": []
    },
    {
        "id": "bbc21941459b78c9",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "f272d8bc.1f1258",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "step_count",
        "label": "Step count",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 787,
        "y": 1766,
        "wires": []
    },
    {
        "id": "e902df84401370b2",
        "type": "function",
        "z": "88971af9.c4b578",
        "name": "",
        "func": "\nif (msg.payload !== undefined)\n{\n    var data = msg.payload.split(\":\");\n    msg.payload= {\n        x : parseInt(data[2]),   \n        y : parseInt(data[1]),  \n        z : parseInt(data[0])\n        \n    };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1211,
        "y": 1730,
        "wires": [
            [
                "be440adac523a772"
            ]
        ]
    },
    {
        "id": "b8c26ae294db42ad",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "pressure",
        "group": "f272d8bc.1f1258",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": "870",
        "max": "1090",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 950,
        "y": 1709,
        "wires": []
    },
    {
        "id": "bbd097d03bf84d36",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "f272d8bc.1f1258",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "missed",
        "label": "Missed packet",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1046,
        "y": 1674,
        "wires": []
    },
    {
        "id": "17b8cc3e21ec1572",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "temperature",
        "group": "f272d8bc.1f1258",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature",
        "label": "deg",
        "format": "{{value}}",
        "min": "-30",
        "max": "50",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 961,
        "y": 1640,
        "wires": []
    },
    {
        "id": "03b29647bde55239",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "voltage",
        "group": "f272d8bc.1f1258",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "2",
        "max": "3.5",
        "colors": [
            "#b50000",
            "#e6e600",
            "#02ff22"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 755.5,
        "y": 1663,
        "wires": []
    },
    {
        "id": "7cab30d86baf5dfd",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "avg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 1786,
        "wires": [
            [
                "f137c490df836185"
            ]
        ]
    },
    {
        "id": "73416f7917ad63f1",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "max",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1207.5,
        "y": 1820,
        "wires": [
            [
                "f137c490df836185"
            ]
        ]
    },
    {
        "id": "f137c490df836185",
        "type": "ui_chart",
        "z": "88971af9.c4b578",
        "name": "acceleration",
        "group": "f272d8bc.1f1258",
        "order": 4,
        "width": 4,
        "height": 3,
        "label": "Acceleration (g)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f38e1b",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1425,
        "y": 1805,
        "wires": [
            []
        ]
    },
    {
        "id": "b1d2fafe8d9d5b56",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "5d4d1f39.203d3",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Sensor eui",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 762,
        "y": 1847,
        "wires": []
    },
    {
        "id": "6dc44c527a722e1b",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "5d4d1f39.203d3",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "step_count",
        "label": "Step count",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 783,
        "y": 1989,
        "wires": []
    },
    {
        "id": "d1d25b1ba2944449",
        "type": "function",
        "z": "88971af9.c4b578",
        "name": "",
        "func": "\nif (msg.payload !== undefined)\n{\n    var data = msg.payload.split(\":\");\n    msg.payload= {\n        x : parseInt(data[2]),   \n        y : parseInt(data[1]),  \n        z : parseInt(data[0])\n        \n    };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1209,
        "y": 1948,
        "wires": [
            [
                "7e2530c7269b916e"
            ]
        ]
    },
    {
        "id": "d4f502006ad05184",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "pressure",
        "group": "5d4d1f39.203d3",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": "870",
        "max": "1090",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 946,
        "y": 1932,
        "wires": []
    },
    {
        "id": "9420478f200eb938",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "5d4d1f39.203d3",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "missed",
        "label": "Missed packet",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1042,
        "y": 1897,
        "wires": []
    },
    {
        "id": "abbf6f7876dc489b",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "temperature",
        "group": "5d4d1f39.203d3",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature",
        "label": "deg",
        "format": "{{value}}",
        "min": "-30",
        "max": "50",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 957,
        "y": 1863,
        "wires": []
    },
    {
        "id": "b0e894a3b359cdbb",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "voltage",
        "group": "5d4d1f39.203d3",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "2",
        "max": "3.5",
        "colors": [
            "#b50000",
            "#e6e600",
            "#02ff22"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 751.5,
        "y": 1886,
        "wires": []
    },
    {
        "id": "a93e8ec3d68b16cd",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "avg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1206,
        "y": 2009,
        "wires": [
            [
                "7ff8c5bc387e08e8"
            ]
        ]
    },
    {
        "id": "1a03f49d67c7cc87",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "max",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1203.5,
        "y": 2043,
        "wires": [
            [
                "7ff8c5bc387e08e8"
            ]
        ]
    },
    {
        "id": "7ff8c5bc387e08e8",
        "type": "ui_chart",
        "z": "88971af9.c4b578",
        "name": "acceleration",
        "group": "5d4d1f39.203d3",
        "order": 4,
        "width": 4,
        "height": 3,
        "label": "Acceleration (g)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f38e1b",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1421,
        "y": 2028,
        "wires": [
            []
        ]
    },
    {
        "id": "27bb25e8930e5815",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "ea39e33e.e1e4a",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Sensor eui",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 758,
        "y": 2074,
        "wires": []
    },
    {
        "id": "6c0699b30e013b80",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "ea39e33e.e1e4a",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "step_count",
        "label": "Step count",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 779,
        "y": 2216,
        "wires": []
    },
    {
        "id": "a21fcaf90038697f",
        "type": "function",
        "z": "88971af9.c4b578",
        "name": "",
        "func": "\nif (msg.payload !== undefined)\n{\n    var data = msg.payload.split(\":\");\n    msg.payload= {\n        x : parseInt(data[2]),   \n        y : parseInt(data[1]),  \n        z : parseInt(data[0])\n        \n    };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1203,
        "y": 2180,
        "wires": [
            [
                "d4f288da2c50856b"
            ]
        ]
    },
    {
        "id": "4c09ddaf3b5cb557",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "pressure",
        "group": "ea39e33e.e1e4a",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": "870",
        "max": "1090",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 942,
        "y": 2159,
        "wires": []
    },
    {
        "id": "aa67371a257fe5d6",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "ea39e33e.e1e4a",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "missed",
        "label": "Missed packet",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1038,
        "y": 2124,
        "wires": []
    },
    {
        "id": "b463bc515e037b47",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "temperature",
        "group": "ea39e33e.e1e4a",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature",
        "label": "deg",
        "format": "{{value}}",
        "min": "-30",
        "max": "50",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 953,
        "y": 2090,
        "wires": []
    },
    {
        "id": "b4f81cac043afb44",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "voltage",
        "group": "ea39e33e.e1e4a",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "2",
        "max": "3.5",
        "colors": [
            "#b50000",
            "#e6e600",
            "#02ff22"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 747.5,
        "y": 2113,
        "wires": []
    },
    {
        "id": "0882966569ea2cea",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "avg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1202,
        "y": 2236,
        "wires": [
            [
                "0c5f7c601f385a84"
            ]
        ]
    },
    {
        "id": "16197c56629653e5",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "max",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1199.5,
        "y": 2270,
        "wires": [
            [
                "0c5f7c601f385a84"
            ]
        ]
    },
    {
        "id": "0c5f7c601f385a84",
        "type": "ui_chart",
        "z": "88971af9.c4b578",
        "name": "acceleration",
        "group": "ea39e33e.e1e4a",
        "order": 4,
        "width": 4,
        "height": 3,
        "label": "Acceleration (g)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f38e1b",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1417,
        "y": 2255,
        "wires": [
            []
        ]
    },
    {
        "id": "79fdb89d547f72f4",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "1519e739.96fc29",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Sensor eui",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 758,
        "y": 2303,
        "wires": []
    },
    {
        "id": "cbc097cebdf4c6b2",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "1519e739.96fc29",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "step_count",
        "label": "Step count",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 779,
        "y": 2445,
        "wires": []
    },
    {
        "id": "99791a7bb14dd6fa",
        "type": "function",
        "z": "88971af9.c4b578",
        "name": "",
        "func": "\nif (msg.payload !== undefined)\n{\n    var data = msg.payload.split(\":\");\n    msg.payload= {\n        x : parseInt(data[2]),   \n        y : parseInt(data[1]),  \n        z : parseInt(data[0])\n        \n    };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1203,
        "y": 2409,
        "wires": [
            [
                "b2bdd8d9ef11fb65"
            ]
        ]
    },
    {
        "id": "ca92ac317ba263fc",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "pressure",
        "group": "1519e739.96fc29",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": "870",
        "max": "1090",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 942,
        "y": 2388,
        "wires": []
    },
    {
        "id": "22a26118db3f88c9",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "1519e739.96fc29",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "missed",
        "label": "Missed packet",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1038,
        "y": 2353,
        "wires": []
    },
    {
        "id": "2d10010fa97e5a72",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "temperature",
        "group": "1519e739.96fc29",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature",
        "label": "deg",
        "format": "{{value}}",
        "min": "-30",
        "max": "50",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 953,
        "y": 2319,
        "wires": []
    },
    {
        "id": "cf983801117f8f8b",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "voltage",
        "group": "1519e739.96fc29",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "2",
        "max": "3.5",
        "colors": [
            "#b50000",
            "#e6e600",
            "#02ff22"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 747.5,
        "y": 2342,
        "wires": []
    },
    {
        "id": "e07aa611c77d3fbf",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "avg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1202,
        "y": 2465,
        "wires": [
            [
                "7359b6f180d470eb"
            ]
        ]
    },
    {
        "id": "ae9a48da64a52526",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "max",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1199.5,
        "y": 2499,
        "wires": [
            [
                "7359b6f180d470eb"
            ]
        ]
    },
    {
        "id": "7359b6f180d470eb",
        "type": "ui_chart",
        "z": "88971af9.c4b578",
        "name": "acceleration",
        "group": "1519e739.96fc29",
        "order": 4,
        "width": 4,
        "height": 3,
        "label": "Acceleration (g)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f38e1b",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1417,
        "y": 2484,
        "wires": [
            []
        ]
    },
    {
        "id": "cc50f417620650d4",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "88af1aa6.4fd9a8",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Sensor eui",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 762,
        "y": 2529,
        "wires": []
    },
    {
        "id": "afbc1bd8ed4fecc0",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "88af1aa6.4fd9a8",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "step_count",
        "label": "Step count",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 764,
        "y": 2682,
        "wires": []
    },
    {
        "id": "50afbd28b72bf739",
        "type": "function",
        "z": "88971af9.c4b578",
        "name": "",
        "func": "\nif (msg.payload !== undefined)\n{\n    var data = msg.payload.split(\":\");\n    msg.payload= {\n        x : parseInt(data[2]),   \n        y : parseInt(data[1]),  \n        z : parseInt(data[0])\n        \n    };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1207,
        "y": 2635,
        "wires": [
            [
                "ef7180f3f60999de"
            ]
        ]
    },
    {
        "id": "e9ccc89c55dcef0f",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "pressure",
        "group": "88af1aa6.4fd9a8",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": "870",
        "max": "1090",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 946,
        "y": 2614,
        "wires": []
    },
    {
        "id": "b80de1e4802ff8b2",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "88af1aa6.4fd9a8",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "missed",
        "label": "Missed packet",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1042,
        "y": 2579,
        "wires": []
    },
    {
        "id": "8246acd7ce027b7c",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "temperature",
        "group": "88af1aa6.4fd9a8",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature",
        "label": "deg",
        "format": "{{value}}",
        "min": "-30",
        "max": "50",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 957,
        "y": 2545,
        "wires": []
    },
    {
        "id": "02702e3956837784",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "voltage",
        "group": "88af1aa6.4fd9a8",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "2",
        "max": "3.5",
        "colors": [
            "#b50000",
            "#e6e600",
            "#02ff22"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 751.5,
        "y": 2568,
        "wires": []
    },
    {
        "id": "686f9dbcb62a48e9",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "avg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1206,
        "y": 2691,
        "wires": [
            [
                "cd33b8906bdb96dd"
            ]
        ]
    },
    {
        "id": "7d5ed9350b4447cc",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "max",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1203.5,
        "y": 2725,
        "wires": [
            [
                "cd33b8906bdb96dd"
            ]
        ]
    },
    {
        "id": "cd33b8906bdb96dd",
        "type": "ui_chart",
        "z": "88971af9.c4b578",
        "name": "acceleration",
        "group": "88af1aa6.4fd9a8",
        "order": 4,
        "width": 4,
        "height": 3,
        "label": "Acceleration (g)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f38e1b",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1421,
        "y": 2710,
        "wires": [
            []
        ]
    },
    {
        "id": "1ea58c68e20bf5cf",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "b6edb24b.79389",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Sensor eui",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 764,
        "y": 2765,
        "wires": []
    },
    {
        "id": "47fba729bd466272",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "b6edb24b.79389",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "step_count",
        "label": "Step count",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 785,
        "y": 2907,
        "wires": []
    },
    {
        "id": "8cd07e228939ba50",
        "type": "function",
        "z": "88971af9.c4b578",
        "name": "",
        "func": "\nif (msg.payload !== undefined)\n{\n    var data = msg.payload.split(\":\");\n    msg.payload= {\n        x : parseInt(data[2]),   \n        y : parseInt(data[1]),  \n        z : parseInt(data[0])\n        \n    };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1209,
        "y": 2871,
        "wires": [
            [
                "6581d6191c6db8e4"
            ]
        ]
    },
    {
        "id": "f12ef8bf45067d4d",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "pressure",
        "group": "b6edb24b.79389",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": "870",
        "max": "1090",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 948,
        "y": 2850,
        "wires": []
    },
    {
        "id": "a3925292166968a2",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "b6edb24b.79389",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "missed",
        "label": "Missed packet",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1044,
        "y": 2815,
        "wires": []
    },
    {
        "id": "0a6c17a422229568",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "temperature",
        "group": "b6edb24b.79389",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature",
        "label": "deg",
        "format": "{{value}}",
        "min": "-30",
        "max": "50",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 959,
        "y": 2781,
        "wires": []
    },
    {
        "id": "96926e52bdce334e",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "voltage",
        "group": "b6edb24b.79389",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "2",
        "max": "3.5",
        "colors": [
            "#b50000",
            "#e6e600",
            "#02ff22"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 753.5,
        "y": 2804,
        "wires": []
    },
    {
        "id": "c5b45fdc5bdada56",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "avg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1208,
        "y": 2927,
        "wires": [
            [
                "17da331d981216f0"
            ]
        ]
    },
    {
        "id": "39b0f20af24201ec",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "max",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1205.5,
        "y": 2961,
        "wires": [
            [
                "17da331d981216f0"
            ]
        ]
    },
    {
        "id": "17da331d981216f0",
        "type": "ui_chart",
        "z": "88971af9.c4b578",
        "name": "acceleration",
        "group": "b6edb24b.79389",
        "order": 4,
        "width": 4,
        "height": 3,
        "label": "Acceleration (g)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f38e1b",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1423,
        "y": 2946,
        "wires": [
            []
        ]
    },
    {
        "id": "a0aaa8b2c7593fdc",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "46964e10.8d71",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Sensor eui",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 759,
        "y": 2998,
        "wires": []
    },
    {
        "id": "e88c7cfae6380308",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "46964e10.8d71",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "step_count",
        "label": "Step count",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 780,
        "y": 3140,
        "wires": []
    },
    {
        "id": "17ae790a5242fa89",
        "type": "function",
        "z": "88971af9.c4b578",
        "name": "",
        "func": "\nif (msg.payload !== undefined)\n{\n    var data = msg.payload.split(\":\");\n    msg.payload= {\n        x : parseInt(data[2]),   \n        y : parseInt(data[1]),  \n        z : parseInt(data[0])\n        \n    };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1204,
        "y": 3104,
        "wires": [
            [
                "dbadfa958b2fc72f"
            ]
        ]
    },
    {
        "id": "584495a36310031b",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "pressure",
        "group": "46964e10.8d71",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": "870",
        "max": "1090",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 943,
        "y": 3083,
        "wires": []
    },
    {
        "id": "6368689bad1bef7d",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "46964e10.8d71",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "missed",
        "label": "Missed packet",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1039,
        "y": 3048,
        "wires": []
    },
    {
        "id": "14a45c6434b20107",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "temperature",
        "group": "46964e10.8d71",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature",
        "label": "deg",
        "format": "{{value}}",
        "min": "-30",
        "max": "50",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 954,
        "y": 3014,
        "wires": []
    },
    {
        "id": "852b06bf9e83f629",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "voltage",
        "group": "46964e10.8d71",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "2",
        "max": "3.5",
        "colors": [
            "#b50000",
            "#e6e600",
            "#02ff22"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 748.5,
        "y": 3037,
        "wires": []
    },
    {
        "id": "178476a218e149b2",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "avg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1203,
        "y": 3160,
        "wires": [
            [
                "15612602dee78654"
            ]
        ]
    },
    {
        "id": "72cce629546393e8",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "max",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200.5,
        "y": 3194,
        "wires": [
            [
                "15612602dee78654"
            ]
        ]
    },
    {
        "id": "15612602dee78654",
        "type": "ui_chart",
        "z": "88971af9.c4b578",
        "name": "acceleration",
        "group": "46964e10.8d71",
        "order": 4,
        "width": 4,
        "height": 3,
        "label": "Acceleration (g)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f38e1b",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1418,
        "y": 3179,
        "wires": [
            []
        ]
    },
    {
        "id": "3bec0c43baa2aa0e",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "62172772.5040f8",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Sensor eui",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 758,
        "y": 3222,
        "wires": []
    },
    {
        "id": "18ea1c2683641868",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "62172772.5040f8",
        "order": 6,
        "width": 4,
        "height": 1,
        "name": "step_count",
        "label": "Step count",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 772,
        "y": 3369,
        "wires": []
    },
    {
        "id": "b9883d4ddbad9beb",
        "type": "function",
        "z": "88971af9.c4b578",
        "name": "",
        "func": "\nif (msg.payload !== undefined)\n{\n    var data = msg.payload.split(\":\");\n    msg.payload= {\n        x : parseInt(data[2]),   \n        y : parseInt(data[1]),  \n        z : parseInt(data[0])\n        \n    };\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1203,
        "y": 3328,
        "wires": [
            [
                "3194a5b455ceb6d5"
            ]
        ]
    },
    {
        "id": "3b752fb66e1dc6d2",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "pressure",
        "group": "62172772.5040f8",
        "order": 11,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{value}}",
        "min": "870",
        "max": "1090",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 942,
        "y": 3307,
        "wires": []
    },
    {
        "id": "13b86e6fcc94b302",
        "type": "ui_text",
        "z": "88971af9.c4b578",
        "group": "62172772.5040f8",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "missed",
        "label": "Missed packet",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 1038,
        "y": 3272,
        "wires": []
    },
    {
        "id": "4fb1adbd2e98f1fb",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "temperature",
        "group": "62172772.5040f8",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Temperature",
        "label": "deg",
        "format": "{{value}}",
        "min": "-30",
        "max": "50",
        "colors": [
            "#0b5bef",
            "#32f40b",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 953,
        "y": 3238,
        "wires": []
    },
    {
        "id": "ac3a88cb4b986283",
        "type": "ui_gauge",
        "z": "88971af9.c4b578",
        "name": "voltage",
        "group": "62172772.5040f8",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "Voltage",
        "label": "V",
        "format": "{{value}}",
        "min": "2",
        "max": "3.5",
        "colors": [
            "#b50000",
            "#e6e600",
            "#02ff22"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 747.5,
        "y": 3261,
        "wires": []
    },
    {
        "id": "1a266268dd4bcf15",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "avg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1202,
        "y": 3384,
        "wires": [
            [
                "4da6c5823b5b88ed"
            ]
        ]
    },
    {
        "id": "bd05ee2ef2c8fa5c",
        "type": "change",
        "z": "88971af9.c4b578",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "max",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1199.5,
        "y": 3418,
        "wires": [
            [
                "4da6c5823b5b88ed"
            ]
        ]
    },
    {
        "id": "4da6c5823b5b88ed",
        "type": "ui_chart",
        "z": "88971af9.c4b578",
        "name": "acceleration",
        "group": "62172772.5040f8",
        "order": 4,
        "width": 4,
        "height": 3,
        "label": "Acceleration (g)",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "10",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f38e1b",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1417,
        "y": 3403,
        "wires": [
            []
        ]
    },
    {
        "id": "96dda1510b594b48",
        "type": "ui_3D",
        "z": "88971af9.c4b578",
        "group": "18848a5.a3bdb76",
        "order": 3,
        "width": 4,
        "height": 3,
        "name": "",
        "x": 1369.5,
        "y": 133,
        "wires": []
    },
    {
        "id": "12165b240a4466b1",
        "type": "ui_activity",
        "z": "88971af9.c4b578",
        "group": "18848a5.a3bdb76",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "textColor": "#000000",
        "x": 915.5,
        "y": 153,
        "wires": []
    },
    {
        "id": "3194a5b455ceb6d5",
        "type": "ui_3D",
        "z": "88971af9.c4b578",
        "group": "62172772.5040f8",
        "order": 3,
        "width": 4,
        "height": 3,
        "name": "",
        "x": 1393.5,
        "y": 3326,
        "wires": []
    },
    {
        "id": "e87634aa06ad4291",
        "type": "ui_activity",
        "z": "88971af9.c4b578",
        "group": "62172772.5040f8",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "textColor": "#000000",
        "x": 933.5,
        "y": 3350,
        "wires": []
    },
    {
        "id": "b04c90b70fc5013f",
        "type": "ui_activity",
        "z": "88971af9.c4b578",
        "group": "46964e10.8d71",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "textColor": "#000000",
        "x": 931.5,
        "y": 3126,
        "wires": []
    },
    {
        "id": "dbadfa958b2fc72f",
        "type": "ui_3D",
        "z": "88971af9.c4b578",
        "group": "46964e10.8d71",
        "order": 3,
        "width": 4,
        "height": 3,
        "name": "",
        "x": 1397.5,
        "y": 3103,
        "wires": []
    },
    {
        "id": "27dde64565c2081a",
        "type": "ui_activity",
        "z": "88971af9.c4b578",
        "group": "b6edb24b.79389",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "textColor": "#000000",
        "x": 937.5,
        "y": 2892,
        "wires": []
    },
    {
        "id": "6581d6191c6db8e4",
        "type": "ui_3D",
        "z": "88971af9.c4b578",
        "group": "b6edb24b.79389",
        "order": 3,
        "width": 4,
        "height": 3,
        "name": "",
        "x": 1403.5,
        "y": 2871,
        "wires": []
    },
    {
        "id": "ef7180f3f60999de",
        "type": "ui_3D",
        "z": "88971af9.c4b578",
        "group": "88af1aa6.4fd9a8",
        "order": 3,
        "width": 4,
        "height": 3,
        "name": "",
        "x": 1402.5,
        "y": 2634,
        "wires": []
    },
    {
        "id": "6a30f995025e7997",
        "type": "ui_activity",
        "z": "88971af9.c4b578",
        "group": "88af1aa6.4fd9a8",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "textColor": "#000000",
        "x": 932.5,
        "y": 2660,
        "wires": []
    },
    {
        "id": "9454c3142892d699",
        "type": "ui_activity",
        "z": "88971af9.c4b578",
        "group": "1519e739.96fc29",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "textColor": "#000000",
        "x": 931.5,
        "y": 2430,
        "wires": []
    },
    {
        "id": "b2bdd8d9ef11fb65",
        "type": "ui_3D",
        "z": "88971af9.c4b578",
        "group": "1519e739.96fc29",
        "order": 3,
        "width": 4,
        "height": 3,
        "name": "",
        "x": 1400.5,
        "y": 2409,
        "wires": []
    },
    {
        "id": "ce64c5e50c68b31b",
        "type": "ui_activity",
        "z": "88971af9.c4b578",
        "group": "ea39e33e.e1e4a",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "textColor": "#000000",
        "x": 934.5,
        "y": 2203,
        "wires": []
    },
    {
        "id": "d4f288da2c50856b",
        "type": "ui_3D",
        "z": "88971af9.c4b578",
        "group": "ea39e33e.e1e4a",
        "order": 3,
        "width": 4,
        "height": 3,
        "name": "",
        "x": 1395.5,
        "y": 2181,
        "wires": []
    },
    {
        "id": "ddd260671be2692d",
        "type": "ui_activity",
        "z": "88971af9.c4b578",
        "group": "5d4d1f39.203d3",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "textColor": "#000000",
        "x": 935.5,
        "y": 1975,
        "wires": []
    },
    {
        "id": "7e2530c7269b916e",
        "type": "ui_3D",
        "z": "88971af9.c4b578",
        "group": "5d4d1f39.203d3",
        "order": 3,
        "width": 4,
        "height": 3,
        "name": "",
        "x": 1404.5,
        "y": 1947,
        "wires": []
    },
    {
        "id": "be440adac523a772",
        "type": "ui_3D",
        "z": "88971af9.c4b578",
        "group": "f272d8bc.1f1258",
        "order": 3,
        "width": 4,
        "height": 3,
        "name": "",
        "x": 1406.5,
        "y": 1730,
        "wires": []
    },
    {
        "id": "4ec08d6213deb62e",
        "type": "ui_activity",
        "z": "88971af9.c4b578",
        "group": "f272d8bc.1f1258",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "textColor": "#000000",
        "x": 937.5,
        "y": 1752,
        "wires": []
    },
    {
        "id": "45a30e14634134c0",
        "type": "ui_3D",
        "z": "88971af9.c4b578",
        "group": "2b4810e4.a7abc",
        "order": 3,
        "width": 4,
        "height": 3,
        "name": "",
        "x": 1409.5,
        "y": 1507,
        "wires": []
    },
    {
        "id": "12bf5924b4f750ec",
        "type": "ui_activity",
        "z": "88971af9.c4b578",
        "group": "2b4810e4.a7abc",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "textColor": "#000000",
        "x": 941.5,
        "y": 1527,
        "wires": []
    },
    {
        "id": "664efb36bbe72651",
        "type": "ui_3D",
        "z": "88971af9.c4b578",
        "group": "cc6b0d90.1c354",
        "order": 3,
        "width": 4,
        "height": 3,
        "name": "",
        "x": 1405.5,
        "y": 1290,
        "wires": []
    },
    {
        "id": "dff0fe60f38653a6",
        "type": "ui_activity",
        "z": "88971af9.c4b578",
        "group": "cc6b0d90.1c354",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "textColor": "#000000",
        "x": 936.5,
        "y": 1308,
        "wires": []
    },
    {
        "id": "c34b44f4bc793664",
        "type": "ui_activity",
        "z": "88971af9.c4b578",
        "group": "de77cfaf.cfb3d",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "textColor": "#000000",
        "x": 904.5,
        "y": 1063,
        "wires": []
    },
    {
        "id": "ccd2a83e92e6bb86",
        "type": "ui_3D",
        "z": "88971af9.c4b578",
        "group": "de77cfaf.cfb3d",
        "order": 3,
        "width": 4,
        "height": 3,
        "name": "",
        "x": 1390.5,
        "y": 1046,
        "wires": []
    },
    {
        "id": "62a6bbbcae157d86",
        "type": "ui_3D",
        "z": "88971af9.c4b578",
        "group": "9142e5f0.a71698",
        "order": 3,
        "width": 4,
        "height": 3,
        "name": "",
        "x": 1387.5,
        "y": 818,
        "wires": []
    },
    {
        "id": "7de24251bcc6800b",
        "type": "ui_activity",
        "z": "88971af9.c4b578",
        "group": "9142e5f0.a71698",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "textColor": "#000000",
        "x": 909.5,
        "y": 838,
        "wires": []
    },
    {
        "id": "d54f87b38a307732",
        "type": "ui_activity",
        "z": "88971af9.c4b578",
        "group": "5cf86100.5fd8",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "textColor": "#000000",
        "x": 894.5,
        "y": 609,
        "wires": []
    },
    {
        "id": "62e5bfa1dc492b94",
        "type": "ui_3D",
        "z": "88971af9.c4b578",
        "group": "5cf86100.5fd8",
        "order": 3,
        "width": 4,
        "height": 3,
        "name": "",
        "x": 1380.5,
        "y": 592,
        "wires": []
    },
    {
        "id": "298a15aa269342cc",
        "type": "ui_3D",
        "z": "88971af9.c4b578",
        "group": "36f009b.e058af6",
        "order": 3,
        "width": 4,
        "height": 3,
        "name": "",
        "x": 1340.5,
        "y": 366,
        "wires": []
    },
    {
        "id": "19af1b6c30013488",
        "type": "ui_activity",
        "z": "88971af9.c4b578",
        "group": "36f009b.e058af6",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "textColor": "#000000",
        "x": 885.5,
        "y": 382,
        "wires": []
    },
    {
        "id": "eb4aa753.f6b358",
        "type": "function",
        "z": "fce58382.31591",
        "name": "timeout reset",
        "func": "if (msg.topic===\"ok\"|| msg.topic===\"resetok\" ) {\n    msg.reset=\"reset\";\n    return msg;\n}\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 440,
        "wires": [
            [
                "2e76a1ff.23c7ae"
            ]
        ]
    },
    {
        "id": "e7523cba.c8aba",
        "type": "link in",
        "z": "fce58382.31591",
        "name": "Flow to AT command",
        "links": [
            "7db21ce.11791e4",
            "367a47e6.bb5fc8"
        ],
        "x": 215,
        "y": 200,
        "wires": [
            [
                "79355cf1.394c84"
            ]
        ]
    },
    {
        "id": "49ce2c8c.639474",
        "type": "link out",
        "z": "fce58382.31591",
        "name": "AT command to demo flow",
        "links": [
            "84334ee1.e5381"
        ],
        "x": 655,
        "y": 340,
        "wires": []
    },
    {
        "id": "a906960f.8c9c28",
        "type": "comment",
        "z": "fce58382.31591",
        "name": "AT COMMAND MANAGEMENT",
        "info": "",
        "x": 390,
        "y": 80,
        "wires": []
    },
    {
        "id": "a86a8a91.9c1628",
        "type": "function",
        "z": "fce58382.31591",
        "name": "Result formatter",
        "func": "var status=null;\n\nif (msg.status) {\n    if ( msg.status.text===\"node-red:common.status.not-connected\") {\n    msg.topic=\"disconnect\";\n    msg.flow=\"ALL\"\n    flow.set(\"AT_Command\",\"\");\n    return msg;\n    } \n    if ( msg.status.text===\"node-red:common.status.connected\") {\n    msg.topic=\"connect\";\n    msg.flow=\"ALL\"\n    return msg;\n    } \n    if ( msg.status.text===\"timeout\") {\n    msg.topic=\"error\";\n    msg.flow=\"ALL\";\n    flow.set(\"AT_Command\",\"\"); \n    return msg;\n    } \n\n}\n\nvar input=msg.payload.trim();\nvar command=flow.get(\"AT_Command\").trim();\n\n// No command sent \nif (command===\"\") {\n    // check if it is reset message\n    if (input===\"Concentrator Reset\") {\n        flow.set(\"AT_Command\",\"\"); \n        msg.topic=\"resetok\";\n        msg.flow=\"ALL\";\n        return msg;\n        \n    } \n    if (input.includes(\"AT+RCV=\")) {\n        flow.set(\"AT_Command\",\"\"); \n        msg.topic=\"data\";\n        msg.flow=\"ALL\";\n        msg.payload=input;\n        return msg;\n        \n    } \n    if (input.includes(\"AT+LOST=\")) {\n        flow.set(\"AT_Command\",\"\"); \n        msg.topic=\"lost\";\n        msg.flow=\"ALL\";\n        msg.payload=input;\n        return msg;\n    }\n    if (input.includes(\"AT+MOD_OK=\")) {\n        flow.set(\"AT_Command\",\"\");\n        msg.topic=\"mod\";\n        msg.flow=\"ALL\";\n        msg.payload=input;\n        return msg;\n    }\n        \n    return null;\n    \n}\n\n\nswitch (input) {\n    case \"OK\":\n        status=\"ok\";\n        flow.set(\"AT_Command\",\"\");\n        break;\n    case \"Concentrator Reset\":\n        status=\"resetok\";\n        msg.flow=\"ALL\";\n        flow.set(\"AT_Command\",\"\");\n        break;\n    case \"AT_PARAM_ERROR\":\n        status=\"error\";\n        flow.set(\"AT_Command\",\"\");\n        break;\n    case \"AT_BUSY_ERROR\":\n        status=\"error\";\n        flow.set(\"AT_Command\",\"\");\n        break;\n   \n    \n}\nif (status !== null) {\n    msg.topic=status;\n    msg.flow=msg.flow||flow.get(\"AT_Flow\");\n    \nreturn msg;\n}\nelse {\n    return null;\n\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 340,
        "wires": [
            [
                "eb4aa753.f6b358",
                "49ce2c8c.639474"
            ]
        ]
    },
    {
        "id": "79355cf1.394c84",
        "type": "function",
        "z": "fce58382.31591",
        "name": "validate command",
        "func": "if (flow.get(\"AT_Command\")===\"\"||flow.get(\"AT_Command\")===undefined) {\n\n// No AT cmd ongoing\nflow.set(\"AT_Command\",msg.payload);\nflow.set(\"AT_Flow\",msg.flow);\nmsg.payload=msg.payload+\"\\n\";\nreturn msg;\n\n    \n} else {\n    // error case\n    var errorMsg = { topic : \"error\", flow : msg.flow, payload : \"BUSY\" };\n    return [null, errorMsg];    \n}\n\n",
        "outputs": 2,
        "noerr": 0,
        "x": 410,
        "y": 200,
        "wires": [
            [
                "2e76a1ff.23c7ae",
                "ccb17de7.4dea4"
            ],
            [
                "49ce2c8c.639474"
            ]
        ]
    },
    {
        "id": "2e76a1ff.23c7ae",
        "type": "delay",
        "z": "fce58382.31591",
        "name": "Timeout",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 900,
        "y": 440,
        "wires": [
            [
                "6655f462.c5ef8c"
            ]
        ]
    },
    {
        "id": "6655f462.c5ef8c",
        "type": "change",
        "z": "fce58382.31591",
        "name": "format timeout",
        "rules": [
            {
                "t": "set",
                "p": "status.text",
                "pt": "msg",
                "to": "timeout",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 440,
        "wires": [
            [
                "a86a8a91.9c1628"
            ]
        ]
    },
    {
        "id": "ba17d7e4.af3508",
        "type": "comment",
        "z": "fce58382.31591",
        "name": "From Demo Flow",
        "info": "",
        "x": 160,
        "y": 160,
        "wires": []
    },
    {
        "id": "544a4025.ccf2f",
        "type": "comment",
        "z": "fce58382.31591",
        "name": "To Demo Flow",
        "info": "",
        "x": 750,
        "y": 320,
        "wires": []
    },
    {
        "id": "fc984158.fdec3",
        "type": "ui_button",
        "z": "fce58382.31591",
        "name": "",
        "group": "a0308ba2.3cecc8",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "clear log",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "clear",
        "payloadType": "str",
        "topic": "",
        "x": 320,
        "y": 800,
        "wires": [
            [
                "9aebb268.4c9f3"
            ]
        ]
    },
    {
        "id": "26e0b56.764ee4a",
        "type": "template",
        "z": "fce58382.31591",
        "name": "set log direction",
        "field": "from",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<i class=\"fa fa-arrow-left\"></i>",
        "output": "str",
        "x": 340,
        "y": 960,
        "wires": [
            [
                "a5d79dda.35275"
            ]
        ]
    },
    {
        "id": "117ff5e0.02015a",
        "type": "template",
        "z": "fce58382.31591",
        "name": "set log direction",
        "field": "from",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<i class=\"fa fa-arrow-right\"></i>",
        "output": "str",
        "x": 340,
        "y": 880,
        "wires": [
            [
                "a5d79dda.35275"
            ]
        ]
    },
    {
        "id": "7fb096d9.c31318",
        "type": "subflow:a4435987.cef7d8",
        "z": "fce58382.31591",
        "name": "Log table data",
        "env": [
            {
                "name": "tabulator",
                "value": "{\"tabulator\":{\"index\":\"msg.topic\",\"movableColumns\":true,\"groupBy\":\"\",\"columns\":[{\"formatter\":\"html\",\"title\":\"I/O\",\"field\":\"from\",\"width\":35,\"frozen\":true,\"align\":\"center\",\"headerSort\":false},{\"formatter\":\"plaintext\",\"title\":\"Time\",\"field\":\"time\",\"align\":\"center\",\"width\":70,\"headerSort\":false},{\"formatter\":\"plaintext\",\"title\":\"Log\",\"field\":\"log\",\"width\":500,\"headerSort\":false}]}}",
                "type": "json"
            },
            {
                "name": "tableIndex",
                "value": "msg.topic",
                "type": "str"
            },
            {
                "name": "dashboard",
                "value": "STM32WL Demo",
                "type": "str"
            },
            {
                "name": "tableContext",
                "value": "{\"tableData\":{\"name\":\"tableData\"},\"tableConfig\":{\"name\":\"tableConfig\",\"storage\":\"memory\"},\"tableEdit\":{\"name\":\"tableEdit\",\"storage\":\"memory\"}}",
                "type": "json"
            },
            {
                "name": "group",
                "value": "STM32WL_Demo_Serial_log",
                "type": "str"
            }
        ],
        "x": 780,
        "y": 860,
        "wires": [
            [
                "45f57857.2e62d8"
            ],
            []
        ]
    },
    {
        "id": "45f57857.2e62d8",
        "type": "ui_table",
        "z": "fce58382.31591",
        "group": "a0308ba2.3cecc8",
        "name": "Log Table UI",
        "order": 4,
        "width": 8,
        "height": 7,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1170,
        "y": 860,
        "wires": []
    },
    {
        "id": "ccfbe6e.07cbe18",
        "type": "ui_ui_control",
        "z": "fce58382.31591",
        "name": "",
        "events": "all",
        "x": 540,
        "y": 860,
        "wires": [
            [
                "7fb096d9.c31318"
            ]
        ]
    },
    {
        "id": "a5d79dda.35275",
        "type": "function",
        "z": "fce58382.31591",
        "name": "format log",
        "func": "var index = flow.get(\"logIndex\")||0;\nindex+=1;\nflow.set(\"logIndex\",index);\n\nvar logTime = new Date(Date.now());\nvar newMsg = \n{\n    \"row\": {\n        \"time\": logTime.toTimeString().substr(0, 8),\n        \"log\":msg.payload,\n        \"from\":msg.from\n    },\n    \"topic\": index\n}\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 920,
        "wires": [
            [
                "7fb096d9.c31318",
                "a1429687.af23d8"
            ]
        ]
    },
    {
        "id": "9aebb268.4c9f3",
        "type": "change",
        "z": "fce58382.31591",
        "name": "Reset table",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"command\":\"deleteTable\",\"object\":\"tableCache\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "logIndex",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 800,
        "wires": [
            [
                "7fb096d9.c31318"
            ]
        ]
    },
    {
        "id": "ccb17de7.4dea4",
        "type": "link out",
        "z": "fce58382.31591",
        "name": "AT command to Serial port",
        "links": [
            "32f8b61e.64252a",
            "33d23146.a5373e"
        ],
        "x": 675,
        "y": 200,
        "wires": []
    },
    {
        "id": "58eba41e.09955c",
        "type": "link in",
        "z": "fce58382.31591",
        "name": "AT Command in",
        "links": [
            "745d116.fd26bf"
        ],
        "x": 215,
        "y": 340,
        "wires": [
            [
                "a86a8a91.9c1628"
            ]
        ]
    },
    {
        "id": "a5491a62.81ca28",
        "type": "comment",
        "z": "fce58382.31591",
        "name": "To Serial Port",
        "info": "",
        "x": 750,
        "y": 160,
        "wires": []
    },
    {
        "id": "66bf4b36.d45814",
        "type": "comment",
        "z": "fce58382.31591",
        "name": "From Serial Port",
        "info": "",
        "x": 160,
        "y": 300,
        "wires": []
    },
    {
        "id": "f781b668.f78bf8",
        "type": "link in",
        "z": "fce58382.31591",
        "name": "",
        "links": [
            "745d116.fd26bf"
        ],
        "x": 195,
        "y": 880,
        "wires": [
            [
                "117ff5e0.02015a"
            ]
        ]
    },
    {
        "id": "33d23146.a5373e",
        "type": "link in",
        "z": "fce58382.31591",
        "name": "",
        "links": [
            "ccb17de7.4dea4"
        ],
        "x": 195,
        "y": 960,
        "wires": [
            [
                "26e0b56.764ee4a"
            ]
        ]
    },
    {
        "id": "61ee634c.191e1c",
        "type": "comment",
        "z": "fce58382.31591",
        "name": "Serial Port log",
        "info": "",
        "x": 450,
        "y": 700,
        "wires": []
    },
    {
        "id": "8304b7a2.ee9498",
        "type": "function",
        "z": "fce58382.31591",
        "name": "scroll down",
        "func": "if (msg.topic===\"autoScroll\") {\n    context.set(\"autoScroll\", msg.payload);\n} \n\nif (context.get(\"autoScroll\")===true) {\n\n    var index = flow.get(\"logIndex\")||1;\n    \n    return {\n        payload: {\n            \"command\": \"scrollToRow\",\n        \"arguments\": [\n            index,\n            \"top\",\n            false\n        ]\n        }\n    };\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 960,
        "wires": [
            [
                "45f57857.2e62d8"
            ]
        ]
    },
    {
        "id": "a1429687.af23d8",
        "type": "delay",
        "z": "fce58382.31591",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "2",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 750,
        "y": 920,
        "wires": [
            [
                "8304b7a2.ee9498"
            ]
        ]
    },
    {
        "id": "588056f6.344d58",
        "type": "ui_switch",
        "z": "fce58382.31591",
        "name": "",
        "label": "Auto Scroll",
        "tooltip": "",
        "group": "a0308ba2.3cecc8",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "autoScroll",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 750,
        "y": 1020,
        "wires": [
            [
                "8304b7a2.ee9498"
            ]
        ]
    },
    {
        "id": "9002c2d3.f0f9e",
        "type": "inject",
        "z": "fce58382.31591",
        "name": "init",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 590,
        "y": 1020,
        "wires": [
            [
                "588056f6.344d58"
            ]
        ]
    },
    {
        "id": "4f6ab3d6.8d3cfc",
        "type": "ui_dropdown",
        "z": "7a58962e.d73f18",
        "name": "mode",
        "label": "Mode",
        "tooltip": "",
        "place": "Select mode",
        "group": "5a2b7c1c.ab5f14",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "LoRa",
                "value": "LORA",
                "type": "str"
            },
            {
                "label": "FSK",
                "value": "FSK",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "x": 412.5,
        "y": 106,
        "wires": [
            [
                "e801d389.5d663"
            ]
        ]
    },
    {
        "id": "d0c9693a.02f9d8",
        "type": "ui_button",
        "z": "7a58962e.d73f18",
        "name": "",
        "group": "5a2b7c1c.ab5f14",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "SET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 893.5,
        "y": 198,
        "wires": [
            [
                "2c831b2f.ec7fa4"
            ]
        ]
    },
    {
        "id": "94592290.20251",
        "type": "ui_dropdown",
        "z": "7a58962e.d73f18",
        "name": "eui",
        "label": "EUI",
        "tooltip": "",
        "place": "Select eui",
        "group": "5a2b7c1c.ab5f14",
        "order": 1,
        "width": 8,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "x": 411.5,
        "y": 57,
        "wires": [
            [
                "530e147b.0fab3c"
            ]
        ]
    },
    {
        "id": "b6cbe5e5.004c88",
        "type": "link in",
        "z": "7a58962e.d73f18",
        "name": "modulation",
        "links": [
            "a71abfc6.f88d6"
        ],
        "x": 202.5,
        "y": 58,
        "wires": [
            [
                "94592290.20251"
            ]
        ]
    },
    {
        "id": "530e147b.0fab3c",
        "type": "change",
        "z": "7a58962e.d73f18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "eui",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 614.5,
        "y": 56,
        "wires": [
            [
                "33a952c1.15331e"
            ]
        ]
    },
    {
        "id": "e801d389.5d663",
        "type": "change",
        "z": "7a58962e.d73f18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mode",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 622.5,
        "y": 105,
        "wires": [
            [
                "33a952c1.15331e"
            ]
        ]
    },
    {
        "id": "2c831b2f.ec7fa4",
        "type": "function",
        "z": "7a58962e.d73f18",
        "name": "prepare AT command",
        "func": "msg.payload=\"AT+MOD_\" + flow.get(\"mode\") + \"=\" + flow.get(\"eui\");\nmsg.flow=\"DEMO\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1068.5,
        "y": 197,
        "wires": [
            [
                "367a47e6.bb5fc8"
            ]
        ]
    },
    {
        "id": "367a47e6.bb5fc8",
        "type": "link out",
        "z": "7a58962e.d73f18",
        "name": "send to at command",
        "links": [
            "e7523cba.c8aba"
        ],
        "x": 1243.5,
        "y": 199,
        "wires": []
    },
    {
        "id": "33a952c1.15331e",
        "type": "function",
        "z": "7a58962e.d73f18",
        "name": "set button",
        "func": "let eui = flow.get(\"eui\");\nlet mode = flow.get(\"mode\");\n\nmsg.enabled=true;\n\nif (eui===undefined || mode===undefined) {\n        msg.enabled=false;\n    }\n    \nmsg.eui= eui;\nmsg.mode=mode;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 867.5,
        "y": 77,
        "wires": [
            [
                "d0c9693a.02f9d8"
            ]
        ]
    },
    {
        "id": "1988f51f.2bbb9b",
        "type": "link in",
        "z": "7a58962e.d73f18",
        "name": "Start",
        "links": [
            "9426b6f1.b691b8"
        ],
        "x": 385.5,
        "y": 251,
        "wires": [
            [
                "311c9237.49255e",
                "66026c73.58e424"
            ]
        ]
    },
    {
        "id": "311c9237.49255e",
        "type": "change",
        "z": "7a58962e.d73f18",
        "name": "init",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "delete",
                "p": "eui",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "mode",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "euiList",
                "pt": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 611.5,
        "y": 250,
        "wires": [
            [
                "d0c9693a.02f9d8"
            ]
        ]
    },
    {
        "id": "2d96b80a.d80008",
        "type": "comment",
        "z": "7a58962e.d73f18",
        "name": "Initialize",
        "info": "",
        "x": 279.5,
        "y": 251,
        "wires": []
    },
    {
        "id": "2962046c.a6de2c",
        "type": "comment",
        "z": "7a58962e.d73f18",
        "name": "New/lost device ",
        "info": "",
        "x": 209.5,
        "y": 22,
        "wires": []
    },
    {
        "id": "66026c73.58e424",
        "type": "function",
        "z": "7a58962e.d73f18",
        "name": "",
        "func": "msg.payload=\"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 183.5,
        "y": 128,
        "wires": [
            [
                "94592290.20251",
                "4f6ab3d6.8d3cfc"
            ]
        ]
    }
]